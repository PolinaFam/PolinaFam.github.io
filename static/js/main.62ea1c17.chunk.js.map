{"version":3,"sources":["core/DesktopsManager/index.ts","core/DesktopsManager/helpers.ts","entities/index.ts","serviceWorker.js","helpers.ts","Note.tsx","File.tsx","Quote.tsx","TargetBox.tsx","Arrow.tsx","components/Loader/index.tsx","components/Title/index.tsx","Board.tsx","Desktop.tsx","MainPage.tsx","redux/modules/app/actions/saveApp.ts","Sidebar.tsx","DesktopPage.tsx","components/Button/index.tsx","pages/UnauthorizedPage/index.tsx","components/App/index.tsx","redux/modules/app/actions/getApp.ts","redux/modules/desktopManager/actions/initDesktopsManagers.ts","redux/index.ts","redux/modules/desktopManager/reducer.ts","redux/modules/app/reducer.ts","redux/configureStore.ts","index.tsx","core/AuthenticationManager/AuthenticationManager.ts","core/DriveProviders/DriveSession.ts","core/DriveProviders/GoogleDriveApi/GoogleDriveAPI.ts","core/DriveProviders/GoogleDriveApi/GoogleDriveSession.ts","core/AuthenticationManager/NotAuthenticatedError.ts","core/AuthenticationManager/AuthenticationManagerSingleton.ts","core/AuthenticationManager/index.ts","core/DesktopsManager/impl/DesktopsManager.ts"],"names":["hashStringV1","content","i","hash","length","charCodeAt","Boolean","window","location","hostname","match","isRelationHasItem","relation","id","firstMemberId","secondaryMemberId","includes","randomBetween","min","max","Math","ceil","random","generateRandomOffsetForDesktopItem","width","height","offsetLeft","innerWidth","offsetTop","innerHeight","subscribeDesktopItemToDragDrop","input","item","onChangeFn","el","document","getElementById","style","$","draggable","drag","event","ui","position","left","top","calcMaxId","items","reduce","Note","props","componentDidUpdate","prevProps","selected","changeClassName","setState","classFilter","edit","editing","save","onChange","note","refs","newText","value","remove","onRemove","handleMouseDown","e","handleMouseUp","state","this","ref","c","toString","className","onMouseDown","onMouseUp","alt","src","onClick","defaultValue","maxLength","rows","renderForm","renderDisplay","React","Component","File","classFilterOblozhka","classFilterBook","file","fileName","Quote","quote","newQuoteText","idName","r","TargetBox","onDrop","useDrop","accept","NativeTypes","FILE","drop","monitor","collect","isOver","canDrop","Arrow","points","zIndex","calcEndCoordinates","box","getBoundingClientRect","x","pageXOffset","y","pageYOffset","splice","updateStyle","n","dx","dy","sqrt","opacity","transform","atan2","PI","prevState","calcPoints","oldPoints","newPoints","some","val","index","addDelBut","getElementsByTagName","display","hideDelBut","transformOrigin","calcStartCoordinates","livePosition","fromItemId","toPoint","onMouseEnter","onMouseLeave","cx","require","bind","Loader","Size","Weight","Board","uniqueId","desktopEntity","saveIntervalId","isSaving","componentDidMount","keydown","handler","keyup","desktopsManager","fetchDesktop","previewMode","setInterval","shiftKey","disabled","callbackFn","inBackground","isLoading","relationsArray","filesArray","quotesArray","notesArray","newDesktopEntity","relationList","fileList","quoteList","noteList","saveDesktop","then","filter","handleFileDrop","arr","files","getItem","name","endsWith","Object","keys","push","nextId","externalFileId","alert","updateNote","newNote","newList","updateQuote","newQuote","updateFile","newFile","renderEachFile","key","removeFile","renderEachNote","removeNote","renderEachQuote","removeQuote","renderEachRelation","removeLink","fileId","newRelations","newFiles","noteId","newNotes","quoteId","newQuotes","relationId","rel","addNote","noteItem","concat","addQuote","quoteItem","relationLivePosition","pageX","pageY","from","handleMouseMove","clearInterval","getDesktop","onMouseMove","map","connect","forwardRef","Desktop","saveName","newName","calculatePreviewScale","windowHeight","windowWidth","maxCoeff","scale","type","children","size","autoFocus","Dropdown","Toggle","variant","Menu","Item","onNavigateDesktop","addEventListener","removeEventListener","get","MainPage","saveApp","appEntity","desktopList","desktops","addDesktop","text","externalId","editDesktop","removeDesktop","elm","renderEachDesktop","element","history","onSelect","filterList","newArr","toLowerCase","indexOf","target","filterDesktops","notSubmit","preventDefault","logout","AuthenticationManagerSingleton","getInstance","reload","userData","getUserData","expanded","app","data","firstName","lastName","isLoaded","ids","desktop","apply","Navbar","fixed","Nav","Text","substr","Form","inline","InputGroup","Prepend","FormControl","placeholder","defaultExpanded","eventKey","paddingLeft","title","dispatch","getState","promise","saveAppEntity","response","payload","catch","errors","Sidebar","filterObjects","DesktopPage","fileUpload","onClickBack","child","search","params","URLSearchParams","Number","parseInt","aria-controls","Collapse","Link","click","backend","HTML5Backend","Title","weight","Tag","SIZE","WEIGHT","defaultProps","H1","Button","isSubmit","isDisabled","button","button_loading","UnauthorizedPage","isError","authenticationManager","login","DriveProvidersEnum","GoogleDrive","changeAuth","App","isAuthorized","initAppData","initDesktopsManagers","getApp","isAuth","restoreFromStore","error","exact","path","component","isInitialised","fetchAppEntity","initialise","desktopManager","DesktopsManager","Promise","resolve","reducer","combineReducers","action","INITIAL_STATE","AppReducer","rootReducer","initialState","undefined","INITIAL_STORE","apiMiddleware","next","isFunction","actionPromise","store","middlewares","thunk","createLogger","collapsed","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","configureStore","createInstance","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","DriveSession","DRIVE_PROVIDER_NAME","GoogleDriveAPI","token","metadata","body","accessToken","gapi","auth","getToken","access_token","parents","form","FormData","append","Blob","JSON","stringify","fetch","method","headers","Headers","Authorization","res","json","itemId","client","drive","list","q","console","log","result","delete","GoogleDriveSession","currentAuth","driveApi","localStorage","familyName","initGAuth","checkSession","hasSession","load","init","apiKey","discoveryDocs","clientId","scope","googleAuth","googleLogout","isSession","isSignedIn","auth2","getAuthInstance","signIn","googleUser","getBasicProfile","getGivenName","getFamilyName","setItem","getAuthResponse","id_token","signOut","currentUser","NOT_AUTHENTICATED_ERROR_MESSAGE","NotAuthenticatedError","Error","AuthenticationManager","session","createDriveProviderSession","driveProvider","loginData","saveAuthData","clearAuthData","getDriveApi","clear","sessionData","provider","authData","instance","ROOT_DIR","FOLDER_MIME_TYPE","METADATA_FILENAME","authenticatedManager","metadataFileId","desktopId","mimeType","insertToDrive","resp","parse","uploadState","oldHash","getIdByFullName","insert","externalDesktopId","d","find"],"mappings":"gGAAA,2Q,kCCAA,qDAEO,SAASA,EAAaC,GAC3B,IACIC,EADAC,EAAO,EAGX,GAAuB,IAAnBF,EAAQG,OACV,OAAOD,EAET,IAAKD,EAAI,EAAGA,EAAID,EAAQG,OAAQF,IAE9BC,GAAQA,GAAQ,GAAKA,EADfF,EAAQI,WAAWH,GAEzBC,GAAQ,EAEV,OAAOA,K,uHCdT,2C,6PCYoBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2D,8aCb5B,IAAMC,EAAoB,SAACC,EAA0BC,GAA3B,MAC/B,CAACD,EAASE,cAAeF,EAASG,mBAAmBC,SAASH,IAEnDI,EAAgB,SAACC,EAAKC,GACjC,OAAOD,EAAME,KAAKC,KAAKD,KAAKE,SAAWH,IAG5BI,EAAqC,SAChDC,EACAC,GAFgD,MAGD,CAC/CC,WAAYT,EAAc,EAAGV,OAAOoB,WAAaH,GACjDI,UAAWX,EAAc,EAAGV,OAAOsB,YAAcJ,KAGtCK,EAAiC,SAC5CC,EACAC,EACAC,GAEA,IAAMC,EAAKC,SAASC,eAAe,UAAYJ,EAAKnB,IACpDqB,EAAGG,MAAMb,MAAQQ,EAAKR,MAAQ,KAC9BU,EAAGG,MAAMZ,OAASO,EAAKP,OAAS,KAChCa,IAAEP,GAAOQ,UAAU,CACjBC,KAAM,SAACC,EAAOC,GAAQ,IAAD,EAC4BA,EAAGC,SAA1CC,EADW,EACXA,KAAMC,EADK,EACLA,IACdX,EAAGG,MAAMO,KAAOA,EAAO,KACvBV,EAAGG,MAAMQ,IAAMA,EAAM,KAErBZ,E,yVAAW,CAAD,GACLD,EADK,CAERN,WAAYkB,EACZhB,UAAWiB,SAMNC,EAAY,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACvBA,EAAMC,QAAO,SAAC7B,EAAD,OAAQN,EAAR,EAAQA,GAAR,OAAiBA,EAAKM,EAAMA,EAAMN,EAAKM,IAAK,I,kOC6G5C8B,E,YA9Hb,WAAYC,GAAgB,IAAD,8BACzB,4CAAMA,KAHAnB,WAEmB,IAa3BoB,mBAAqB,SAACC,GAChB,EAAKF,MAAMG,WAAaD,EAAUC,UACpC,EAAKC,mBAfkB,EA0B3BA,gBAAkB,WACY,SAAxB,EAAKJ,MAAMG,SACb,EAAKE,SAAS,CAAEC,YAAa,aACI,SAAxB,EAAKN,MAAMG,SACpB,EAAKE,SAAS,CAAEC,YAAa,WAE7B,EAAKD,SAAS,CAAEC,YAAa,MAhCN,EAoC3BC,KAAO,WACL,EAAKF,SAAS,CAAEG,SAAS,KArCA,EAwC3BC,KAAO,WACL,EAAKT,MAAMU,S,yVAAX,IACK,EAAKV,MAAMW,KADhB,CAEE5D,QAAU,EAAK6D,KAAKC,QAAgBC,SAEtC,EAAKT,SAAS,CAAEG,SAAS,KA7CA,EAgD3BO,OAAS,WACP,EAAKf,MAAMgB,SAAS,EAAKhB,MAAMW,KAAKhD,KAjDX,EAoD3BsD,gBAAkB,SAACC,EAAGvD,GACpB,EAAKqC,MAAMiB,gBAAgBC,EAAGvD,IArDL,EAuD3BwD,cAAgB,SAACD,EAAGvD,GAClB,EAAKqC,MAAMmB,cAAcD,EAAGvD,IArD5B,EAAKyD,MAAQ,CACXZ,SAAS,EACTrB,MAAO,CACLO,KAAM,EAAKM,MAAMW,KAAKnC,WAAa,KACnCmB,IAAK,EAAKK,MAAMW,KAAKjC,UAAY,MAEnC4B,YAAa,IATU,E,iFAmBN,IAAD,EACSe,KAAKrB,MAAxBW,EADU,EACVA,KAAMD,EADI,EACJA,SACd9B,EAA+ByC,KAAKxC,MAAO8B,EAAMD,GAEjDW,KAAKjB,oB,sCAoCU,IAAD,OACRzC,EAAK0D,KAAKrB,MAAMW,KAAKhD,GAE3B,OACE,oCACE,yBACE2D,IAAK,SAAAC,GAAC,OAAK,EAAK1C,MAAQ0C,GACxB5D,GAAIA,EAAG6D,WACPC,UAAW,aAAeJ,KAAKD,MAAMd,YACrCnB,MAAOkC,KAAKD,MAAMjC,MAClBuC,YAAa,SAAAR,GAAC,OAAI,EAAKD,gBAAgBC,EAAGvD,IAC1CgE,UAAW,SAAAT,GAAC,OAAI,EAAKC,cAAcD,EAAGvD,KAEtC,yBAAK8D,UAAU,aACb,yBAAKA,UAAU,OAAOG,IAAI,YAAYC,IAAI,kBAC1C,yBAAKJ,UAAU,gBAEjB,2BAAIJ,KAAKrB,MAAMW,KAAK5D,SACpB,8BACE,4BAAQ+E,QAAST,KAAKd,KAAMkB,UAAU,mBAAtC,uBAIA,4BAAQK,QAAST,KAAKN,OAAQU,UAAU,kBAAxC,gDAKJ,yBAAK9D,GAAI,UAAYA,EAAI8D,UAAU,SAAStC,MAAOkC,KAAKD,MAAMjC,W,mCAMlE,OACE,oCACE,yBACEmC,IAAI,SACJG,UAAW,aAAeJ,KAAKD,MAAMd,YACrC3C,GAAI0D,KAAKrB,MAAMW,KAAKhD,GAAG6D,WACvBrC,MAAOkC,KAAKD,MAAMjC,OAElB,8BACEmC,IAAI,UACJS,aAAcV,KAAKrB,MAAMW,KAAK5D,QAC9B0E,UAAU,eACVO,UAAW,IACXC,KAAM,KAER,4BAAQR,UAAU,cAAcK,QAAST,KAAKZ,MAA9C,2DAIF,yBAAK9C,GAAI,UAAY0D,KAAKrB,MAAMW,KAAKhD,GAAI8D,UAAU,SAAStC,MAAOkC,KAAKD,MAAMjC,W,+BAMlF,OAAIkC,KAAKD,MAAMZ,QACNa,KAAKa,aAELb,KAAKc,oB,GA5HCC,IAAMC,WCiGVC,G,mBA9Fb,WAAYtC,GAAQ,IAAD,uBACjB,4CAAMA,KAHAnB,WAEW,IAgBnBoB,mBAAqB,SAACC,GAChB,EAAKF,MAAMG,WAAaD,EAAUC,UACpC,EAAKC,mBAlBU,EA4BnBA,gBAAkB,WACY,SAAxB,EAAKJ,MAAMG,UACb,EAAKE,SAAS,CAAEC,YAAa,KAC7B,EAAKD,SAAS,CAAEkC,oBAAqB,kBACrC,EAAKlC,SAAS,CAAEmC,gBAAiB,gBACA,SAAxB,EAAKxC,MAAMG,UACpB,EAAKE,SAAS,CAAEC,YAAa,WAC7B,EAAKD,SAAS,CAAEkC,oBAAqB,KACrC,EAAKlC,SAAS,CAAEmC,gBAAiB,OAEjC,EAAKnC,SAAS,CAAEC,YAAa,KAC7B,EAAKD,SAAS,CAAEkC,oBAAqB,KACrC,EAAKlC,SAAS,CAAEmC,gBAAiB,OAxClB,EA4CnBzE,cAAgB,SAACC,EAAKC,GACpB,OAAOD,EAAME,KAAKC,KAAKD,KAAKE,SAAWH,IA7CtB,EAgDnB8C,OAAS,WACP,EAAKf,MAAMgB,SAAS,EAAKhB,MAAMyC,KAAK9E,KAjDnB,EAoDnBsD,gBAAkB,SAACC,EAAGvD,GACpB,EAAKqC,MAAMiB,gBAAgBC,EAAGvD,IArDb,EAuDnBwD,cAAgB,SAACD,EAAGvD,GAClB,EAAKqC,MAAMmB,cAAcD,EAAGvD,IAxDX,MAGiB,EAAKqC,MAAMyC,KAArCjE,EAHS,EAGTA,WAAYE,EAHH,EAGGA,UAHH,OAKjB,EAAK0C,MAAQ,CACXjC,MAAO,CACLO,KAAMlB,EAAa,KACnBmB,IAAKjB,EAAY,MAEnB4B,YAAa,GACbiC,oBAAqB,GACrBC,gBAAiB,IAZF,E,iFAsBE,IAAD,EACSnB,KAAKrB,MAAxByC,EADU,EACVA,KAAM/B,EADI,EACJA,SACd9B,EAA+ByC,KAAKxC,MAAO4D,EAAM/B,GACjDW,KAAKjB,oB,+BAkCG,IAAD,SACkBiB,KAAKrB,MAAMyC,KAA5B9E,EADD,EACCA,GAAI+E,EADL,EACKA,SAEZ,OACE,oCACE,yBACEjB,UAAW,mBAAqBJ,KAAKD,MAAMd,YAC3C3C,GAAIA,EAAG6D,WACPF,IAAK,SAAAC,GAAC,OAAK,EAAK1C,MAAQ0C,GACxBpC,MAAOkC,KAAKD,MAAMjC,MAClBuC,YAAa,SAAAR,GAAC,OAAI,EAAKD,gBAAgBC,EAAGvD,IAC1CgE,UAAW,SAAAT,GAAC,OAAI,EAAKC,cAAcD,EAAGvD,KAEtC,yBAAK8D,UAAWJ,KAAKD,MAAMmB,oBAAsB,aAC/C,yBAAKd,UAAU,SACb,yBAAKA,UAAU,YACb,yBAAKG,IAAI,GAAGC,IAAI,mBAGpB,yBAAKJ,UAAWJ,KAAKD,MAAMoB,gBAAkB,SAC3C,2BAAIE,GACJ,8BACE,4BAAQZ,QAAST,KAAKN,OAAQU,UAAU,4CAAxC,SAOR,yBAAK9D,GAAI,UAAYA,EAAI8D,UAAU,SAAStC,MAAOkC,KAAKD,MAAMjC,a,GA3FnDiD,IAAMC,Y,yOC2HVM,E,YAzHb,WAAY3C,GAAgB,IAAD,8BACzB,4CAAMA,KAHAnB,WAEmB,IAa3BoB,mBAAqB,SAACC,GAChB,EAAKF,MAAMG,WAAaD,EAAUC,UACpC,EAAKC,mBAfkB,EAyB3BA,gBAAkB,WACY,UAAxB,EAAKJ,MAAMG,SACb,EAAKE,SAAS,CAAEC,YAAa,aACI,SAAxB,EAAKN,MAAMG,SACpB,EAAKE,SAAS,CAAEC,YAAa,WAE7B,EAAKD,SAAS,CAAEC,YAAa,MA/BN,EAmC3BC,KAAO,WACL,EAAKF,SAAS,CAAEG,SAAS,KApCA,EAuC3BC,KAAO,WACL,EAAKT,MAAMU,S,yVAAX,IACK,EAAKV,MAAM4C,MADhB,CAEE7F,QAAU,EAAK6D,KAAKiC,aAAqB/B,SAE3C,EAAKT,SAAS,CAAEG,SAAS,KA5CA,EA+C3BO,OAAS,WACP,EAAKf,MAAMgB,SAAS,EAAKhB,MAAM4C,MAAMjF,KAhDZ,EAmD3BsD,gBAAkB,SAACC,EAAG4B,GACpB,EAAK9C,MAAMiB,gBAAgBC,EAAG4B,IApDL,EAsD3B3B,cAAgB,SAACD,EAAG4B,GAClB,EAAK9C,MAAMmB,cAAcD,EAAG4B,IApD5B,EAAK1B,MAAQ,CACXZ,SAAS,EACTrB,MAAO,CACLO,KAAM,EAAKM,MAAM4C,MAAMpE,WAAa,KACpCmB,IAAK,EAAKK,MAAM4C,MAAMlE,UAAY,MAEpC4B,YAAa,IATU,E,iFAmBN,IAAD,EACUe,KAAKrB,MAAzB4C,EADU,EACVA,MAAOlC,EADG,EACHA,SACf9B,EAA+ByC,KAAKxC,MAAO+D,EAAOlC,GAClDW,KAAKjB,oB,sCAoCU,IAAD,SACUiB,KAAKrB,MAAM4C,MAA3BjF,EADM,EACNA,GAAIZ,EADE,EACFA,QACZ,OACE,oCACE,yBACEuE,IAAK,SAAAC,GAAC,OAAK,EAAK1C,MAAQ0C,GACxBE,UAAW,cAAgBJ,KAAKD,MAAMd,YACtC3C,GAAIA,EAAG6D,WACPrC,MAAOkC,KAAKD,MAAMjC,MAClBuC,YAAa,SAAAR,GAAC,OAAI,EAAKD,gBAAgBC,EAAGvD,IAC1CgE,UAAW,SAAAT,GAAC,OAAI,EAAKC,cAAcD,EAAGvD,KAEtC,2BAAIZ,GACJ,8BACE,4BAAQ+E,QAAST,KAAKd,KAAMkB,UAAU,mBAAtC,uBAIA,4BAAQK,QAAST,KAAKN,OAAQU,UAAU,kBAAxC,gDAKJ,yBAAK9D,GAAI,UAAYA,EAAI8D,UAAU,SAAStC,MAAOkC,KAAKD,MAAMjC,W,mCAKtD,IAAD,EACakC,KAAKrB,MAAM4C,MAA3BjF,EADG,EACHA,GAAIZ,EADD,EACCA,QACZ,OACE,oCACE,yBACEuE,IAAI,UACJG,UAAW,cAAgBJ,KAAKD,MAAMd,YACtC3C,GAAIA,EAAG6D,WACPrC,MAAOkC,KAAKD,MAAMjC,OAElB,8BACEmC,IAAI,eACJS,aAAchF,EACd0E,UAAU,eACVO,UAAW,IACXC,KAAM,KAER,4BAAQR,UAAU,cAAcK,QAAST,KAAKZ,MAA9C,2DAIF,yBAAK9C,GAAI,UAAYA,EAAI8D,UAAU,SAAStC,MAAOkC,KAAKD,MAAMjC,W,+BAMlE,OAAIkC,KAAKD,MAAMZ,QACNa,KAAKa,aAELb,KAAKc,oB,GAvHEC,IAAMC,W,yBCXtBU,G,MAAI,aA6BOC,EA3BG,SAAChD,GAAmB,IAC5BiD,EAAWjD,EAAXiD,OAD2B,EAECC,YAAQ,CAC1CC,OAAQ,CAACC,IAAYC,MACrBC,KAF0C,SAErCxE,EAAMyE,GACLN,GAEFA,EAAOjD,EAAOuD,IAGlBC,QAAS,SAAAD,GAAO,MAAK,CACnBE,OAAQF,EAAQE,SAChBC,QAASH,EAAQG,cAZc,0BAE1BA,EAF0B,EAE1BA,QAASD,EAFiB,EAEjBA,OAAUH,EAFO,KAmBnC,OAFAP,EADiBW,GAAWD,EACb,YAAc,YAG3B,yBAAKnC,IAAKgC,EAAMnE,MAAO,CAAEb,MAAO,OAAQC,OAAQ,SAC9C,yBAAKkD,UAAWsB,GACd,uBAAGtB,UAAU,YAAb,qB,yOCiIOkC,E,YA/Ib,WAAY3D,GAAgB,IAAD,8BACzB,4CAAMA,KAJR4D,YAG2B,IAF3BC,OAAiB,IAEU,EA0B3BC,mBAAqB,SAAAhB,GACnB,IACMiB,EADO9E,SAASC,eAAe4D,GACpBkB,wBAEXC,EAAIF,EAAIrE,KAAOrC,OAAO6G,YAAcH,EAAIzF,MAAQ,EAChD6F,EAAIJ,EAAIpE,IAAMtC,OAAO+G,YAAcL,EAAIxF,OAAS,EAEtD,EAAKqF,OAAOS,OAAO,EAAG,EAAGJ,EAAGE,IAjCH,EAoC3BG,YAAc,SAACC,GACb,IAAMC,EAAK,EAAKZ,OAAO,GAAK,EAAKA,OAAO,GAClCa,EAAK,EAAKb,OAAO,GAAK,EAAKA,OAAO,GAClC1G,EAASgB,KAAKwG,KAAKF,EAAKA,EAAKC,EAAKA,GAElCtF,E,yVAAK,IAAQ,EAAKiC,MAAMjC,OACF,SAAxB,EAAKa,MAAMG,SACbhB,EAAMwF,QAAU,MAEhBxF,EAAMwF,QAAU,IAGdJ,IACFpF,EAAMO,KAAO,EAAKkE,OAAO,GAAK,KAC9BzE,EAAMQ,IAAM,EAAKiE,OAAO,GAAK,MAE/BzE,EAAM0E,OAAS,EAAKA,OACpB1E,EAAMyF,UAAY,UAAkC,IAArB1G,KAAK2G,MAAMJ,EAAID,GAAatG,KAAK4G,GAAK,OACrE3F,EAAMb,MAAQpB,EAAS,KACvB,EAAKmD,SAAS,CAAElB,WAvDS,EAiE3Bc,mBAAqB,SAACC,EAA6B6E,GACjD,EAAKC,aAEL,IAAMC,EAAYF,EAAUnB,OACtBsB,EAAY,EAAKtB,QAGrBqB,EAAU/H,SAAWgI,EAAUhI,QAC/B+H,EAAUE,MAAK,SAACC,EAAKC,GAAN,OAAgBD,IAAQF,EAAUG,SAEjD,EAAKhF,SAAS,CAAEuD,OAAO,YAAK,EAAKA,UACjC,EAAKU,YAAY,KA5EM,EAoG3BvD,OAAS,WACP,EAAKf,MAAMgB,SAAS,EAAKhB,MAAMtC,SAASC,KArGf,EAwG3B2H,UAAY,SAAApE,GACL,EAAKlB,MAAMtC,WAIHuB,SAASC,eAAe,EAAKc,MAAMtC,SAASC,GAAG6D,YAC1C+D,qBAAqB,QAClC,GAAGpG,MAAMqG,QAAU,UA/GC,EAkH3BC,WAAa,SAAAvE,GACN,EAAKlB,MAAMtC,WAIHuB,SAASC,eAAe,EAAKc,MAAMtC,SAASC,GAAG6D,YAC1C+D,qBAAqB,QAClC,GAAGpG,MAAMqG,QAAU,SAvHxB,EAAKpE,MAAQ,CACXjC,MAAO,CACLO,KAAM,MACNC,IAAK,MACLrB,MAAO,MACPsG,UAAW,eACXc,gBAAiB,MACjB7B,OAAQ,IACRc,QAAS,KAEXf,OAAQ,IAZe,E,kFAgBNd,GACnB,IACMiB,EADO9E,SAASC,eAAe4D,GACpBkB,wBAEXC,EAAIF,EAAIrE,KAAOrC,OAAO6G,YAAcH,EAAIzF,MAAQ,EAChD6F,EAAIJ,EAAIpE,IAAMtC,OAAO+G,YAAcL,EAAIxF,OAAS,EAEtD8C,KAAKuC,OAAOS,OAAO,EAAG,EAAGJ,EAAGE,K,0CAoC5B9C,KAAK2D,aAEL3D,KAAKhB,SAAS,CAAEuD,OAAO,YAAKvC,KAAKuC,UACjCvC,KAAKiD,YAAY,K,mCAoBjB,GADAjD,KAAKuC,OAAS,CAAC,EAAG,EAAG,EAAG,GACpBvC,KAAKrB,MAAMtC,SAAU,CAAC,IAAD,EACsB2D,KAAKrB,MAAMtC,SAAhDE,EADe,EACfA,cAAeC,EADA,EACAA,kBACvBwD,KAAKsE,qBAAqB/H,GAC1ByD,KAAKyC,mBAAmBjG,GAG1B,IAAM+H,EAAevE,KAAKrB,MAAM4F,aAC5BA,IACFvE,KAAKsE,qBAAqBC,EAAaC,YACvCxE,KAAKuC,OAAS,CACZvC,KAAKuC,OAAO,GACZvC,KAAKuC,OAAO,GACZgC,EAAaE,QAAQ7B,EACrB2B,EAAaE,QAAQ3B,M,+BA8BzB,OACE,yBACE1C,UAAU,OACV9D,GAAI0D,KAAKrB,MAAMtC,SAAW2D,KAAKrB,MAAMtC,SAASC,GAAG6D,WAAa,gBAC9DrC,MAAOkC,KAAKD,MAAMjC,MAClB4G,aAAc1E,KAAKiE,UACnBU,aAAc3E,KAAKoE,YAEnB,8BACE,4BAAQ3D,QAAST,KAAKN,OAAQU,UAAU,kBAAxC,W,GA1IUW,IAAMC,WCfpB4D,EAAKC,EAAQ,IAAmBC,KAAKD,EAAQ,MAiBpCE,EAXA,kBACb,uBAAK3E,UAAWwE,EAAG,WACjB,uBAAKxE,UAAWwE,EAAG,kBACjB,4BACA,4BACA,4BACA,+B,6jBCVDI,EAMAC,ECkCCC,E,YAWJ,WAAYvG,GAAQ,IAAD,8BACjB,4CAAMA,KANAwG,SAAmB,IAKR,EAJXC,mBAIW,IAHXC,oBAGW,IAFXC,UAAW,EAEA,EAcnBC,kBAAoB,WAClBxH,IAAEH,UAAU4H,QAAQ,EAAKC,SACzB1H,IAAEH,UAAU8H,MAAM,EAAKD,SAEvB,EAAK9G,MAAMgH,iBAAmB,EAAKC,eAC9B,EAAKjH,MAAMkH,cACd,EAAKR,eAAiBS,aAAY,kBAAM,EAAK1G,KAAK,MAAM,KAAO,OApBhD,EA4CnBqG,QAAU,SAAA5F,GACJA,EAAEkG,SACJhI,IAAE,SAASC,UAAU,CACnBgI,UAAU,IAGZjI,IAAE,SAASC,UAAU,CACnBgI,UAAU,KAnDG,EAwDnB5G,KAAO,SAAC6G,EAAaC,GACnB,IAAI,EAAKnG,MAAMoG,YAAa,EAAKb,SAAjC,CAIA,EAAKA,UAAW,GACfY,GAAgB,EAAKlH,SAAS,CAAEmH,WAAW,IANE,MAQkB,EAAKpG,MAA7DqG,EARsC,EAQtCA,eAAgBC,EARsB,EAQtBA,WAAYC,EARU,EAQVA,YAAaC,EARH,EAQGA,WAC3CC,EAA+B,KAChC,EAAKpB,cAD2B,CAEnCqB,aAAcL,EACdM,SAAUL,EACVM,UAAWL,EACXM,SAAUL,IAGZ,EAAK5H,MAAMgH,gBAAgBkB,YAAYL,GAAkBM,MAAK,WAC5D,EAAKxB,UAAW,GACfY,GAAgB,EAAKlH,SAAS,CAAEmH,WAAW,IAC5CF,GAAcA,SA5EC,EAgFnBrH,mBAAqB,SAACC,GAChB,EAAKF,MAAMoI,SAAWlI,EAAUkI,QAClC,EAAK/H,SAAS,CAAEF,SAAU,EAAKH,MAAMoI,UAGlClI,EAAU8G,iBAAmB,EAAKhH,MAAMgH,iBAC3C,EAAKC,gBAtFU,EA0FnBoB,eAAiB,SAACxI,EAAO0D,GACvB,IAAM+E,EAAM,EAAKlH,MAAMsG,WACjBa,EAAQhF,EAAUA,EAAQiF,UAAUD,MAAQ1I,EAClD,GAAK0I,GAAUA,EAAMrL,OAArB,CAKA,IAAMwF,EAAW6F,EAAM,GAAGE,KAC1B,GAAK/F,EAASgG,SAAS,SAAYhG,EAASgG,SAAS,SAArD,CASA,IAHA,IAGA,MAAgBC,OAAOC,KAAKL,GAA5B,eAAoC,CAA/B,IAAMvL,EAAC,KACVsL,EAAIO,KAAJ,GACElL,GAAI,EAAKmL,SACTpG,SAAU6F,EAAMvL,GAAGyL,KACnBnK,MAAO,IACPC,OAAQ,IACRwK,eAAgB,UACb1K,EAVO,IACC,OAaf,EAAKgC,SAAS,CAAEqH,WAAYY,SAnB1BU,MAAM,gIApGS,EA0HnBF,OAAS,WAEP,OADA,EAAKtC,SAAW,EAAKA,UAAY,EAC1B,EAAKA,YA5HK,EAgInByC,WAAa,SAACC,GAAyB,IAC7BvL,EAAOuL,EAAPvL,GACFwL,EAAU,EAAK/H,MAAMwG,WAAWQ,QAAO,SAACzH,GAAD,OAAsBhD,IAAOgD,EAAKhD,MAC/EwL,EAAQN,KAAKK,GACb,EAAK7I,SAAS,CAAEuH,WAAYuB,KApIX,EAuInBC,YAAc,SAACC,GAA2B,IAChC1L,EAAO0L,EAAP1L,GACFwL,EAAU,EAAK/H,MAAMuG,YAAYS,QAAO,SAACzH,GAAD,OAAsBhD,IAAOgD,EAAKhD,MAChFwL,EAAQN,KAAKQ,GACb,EAAKhJ,SAAS,CAAEsH,YAAawB,KA3IZ,EA8InBG,WAAa,SAACC,GAAyB,IAC7B5L,EAAO4L,EAAP5L,GACFwL,EAAU,EAAK/H,MAAMsG,WAAWU,QAAO,SAAC3F,GAAD,OAAsB9E,IAAO8E,EAAK9E,MAC/EwL,EAAQN,KAAKU,GAEb,EAAKlJ,SAAS,CAAEqH,WAAYyB,KAnJX,EAsJnBK,eAAiB,SAAC/G,GAChB,OACE,kBAAC,EAAD,CACEgH,IAAKhH,EAAK9E,GACV8E,KAAMA,EACN/B,SAAU,EAAK4I,WACftI,SAAU,EAAK0I,WACfvJ,SAAU,EAAKiB,MAAMjB,SACrBc,gBAAiB,EAAKA,gBACtBE,cAAe,EAAKA,iBA/JP,EAoKnBwI,eAAiB,SAAChJ,GAChB,OACE,kBAAC,EAAD,CACER,SAAU,EAAKiB,MAAMjB,SACrBsJ,IAAK9I,EAAKhD,GACVgD,KAAMA,EACND,SAAU,EAAKuI,WACfjI,SAAU,EAAK4I,WACf3I,gBAAiB,EAAKA,gBACtBE,cAAe,EAAKA,iBA7KP,EAkLnB0I,gBAAkB,SAACjH,GACjB,OACE,kBAAC,EAAD,CACEzC,SAAU,EAAKiB,MAAMjB,SACrBsJ,IAAK7G,EAAMjF,GACXiF,MAAOA,EACPlC,SAAU,EAAK0I,YACfpI,SAAU,EAAK8I,YACf7I,gBAAiB,EAAKA,gBACtBE,cAAe,EAAKA,iBA3LP,EAgMnB4I,mBAAqB,SAAArM,GACnB,OACE,kBAAC,EAAD,CACE+L,IAAK/L,EAASC,GACdD,SAAUA,EACVyC,SAAU,EAAKiB,MAAMjB,SACrBa,SAAU,EAAKgJ,cAtMF,EA2MnBN,WAAa,SAAAO,GAEX,IAAMC,EAAe,EAAK9I,MAAMqG,eAAeW,QAC7C,SAAC1K,GAAD,OAA+BD,EAAkBC,EAAUuM,MAEvDE,EAAW,EAAK/I,MAAMsG,WAAWU,QAAO,qBAAGzK,KAA4BsM,KAE7E,EAAK5J,SAAS,CACZqH,WAAYyC,EACZ1C,eAAgByC,KApND,EAwNnBN,WAAa,SAAAQ,GACX,IAAMF,EAAe,EAAK9I,MAAMqG,eAAeW,QAC7C,SAAC1K,GAAD,OAA+BD,EAAkBC,EAAU0M,MAEvDC,EAAW,EAAKjJ,MAAMwG,WAAWQ,QAAO,qBAAGzK,KAA4ByM,KAE7E,EAAK/J,SAAS,CACZuH,WAAYyC,EACZ5C,eAAgByC,KAhOD,EAoOnBJ,YAAc,SAAAQ,GACZ,IAAMJ,EAAe,EAAK9I,MAAMqG,eAAeW,QAC7C,SAAC1K,GAAD,OAA+BD,EAAkBC,EAAU4M,MAEvDC,EAAY,EAAKnJ,MAAMuG,YAAYS,QAAO,qBAAGzK,KAA4B2M,KAE/E,EAAKjK,SAAS,CACZsH,YAAa4C,EACb9C,eAAgByC,KA5OD,EAgPnBF,WAAa,SAAAQ,GACX,EAAKnK,SAAS,CACZoH,eAAgB,EAAKrG,MAAMqG,eAAeW,QACxC,SAACqC,GAAD,OAAyBA,EAAI9M,KAAO6M,QAnPvB,EAwPnBE,QAAU,WACR,IAGMC,EAAoB,GACxBhN,GAAI,EAAKmL,SACT/L,QAAS,WACTwB,OANa,IAObD,MANY,KAOTD,EAPS,IADC,MAWf,EAAKgC,SAAS,CAAEuH,WAAY,EAAKxG,MAAMwG,WAAWgD,OAAOD,MApQxC,EAuQnBE,SAAW,WACT,IAGMC,EAAsB,GAC1BnN,GAAI,EAAKmL,SACT/L,QAAS,YACTwB,OANa,IAObD,MANY,KAOTD,EAPS,IADC,MAWf,EAAKgC,SAAS,CAAEsH,YAAa,EAAKvG,MAAMuG,YAAYiD,OAAOE,MAnR1C,EAsRnB7J,gBAAkB,SAACC,EAAiDvD,GAC9DuD,EAAEkG,UACJ,EAAK/G,SAAS,CACZ0K,qBAAsB,CACpBlF,WAAYlI,EACZmI,QAAS,CACP7B,EAAG/C,EAAE8J,MACL7G,EAAGjD,EAAE+J,WA7RI,EAoSnB9J,cAAgB,SAACD,EAAGvD,GAClB,GAAI,EAAKyD,MAAM2J,qBAAsB,CACnC,IAAMG,EAAO,EAAK9J,MAAM2J,qBAAqBlF,WAG7C,GAFA,EAAKxF,SAAS,CAAE0K,qBAAsB,OAElCG,EAAM,CACR,IAAKvN,GAAMuN,IAASvN,EAClB,OAGF,IAAMD,EAA2B,CAC/BC,GAAI,EAAKmL,SACTlL,cAAesN,EACfrN,kBAAmBF,GAGrB,EAAK0C,SAAS,CAAEoH,eAAgB,EAAKrG,MAAMqG,eAAemD,OAAOlN,QApTpD,EAyTnByN,gBAAkB,SAACjK,GACb,EAAKE,MAAM2J,sBACb,EAAK1K,SAAS,CACZ0K,qBAAsB,CACpBlF,WAAY,EAAKzE,MAAM2J,qBAAqBlF,WAC5CC,QAAS,CACP7B,EAAG/C,EAAE8J,MACL7G,EAAGjD,EAAE+J,WA7Tb,EAAK7J,MAAQ,CACXsG,WAAY,GACZvH,SAAU,EAAKH,MAAMoI,OACrBX,eAAgB,GAChBE,YAAa,GACbC,WAAY,GACZmD,qBAAsB,KACtBvD,WAAW,GAVI,E,oFAyBjBnG,KAAKqF,gBAAkB0E,cAAc/J,KAAKqF,kB,qCAGpB,IAAD,OACrBrF,KAAKhB,SAAS,CAAEmH,WAAW,IAC3BnG,KAAKrB,MAAMgH,gBAAgBqE,WAAWhK,KAAKrB,MAAMrC,IAAIwK,MAAK,SAAC1B,GACzD,EAAKA,cAAgBA,EADqE,IAElFqB,EAAgDrB,EAAhDqB,aAAcC,EAAkCtB,EAAlCsB,SAAUC,EAAwBvB,EAAxBuB,UAAWC,EAAaxB,EAAbwB,SAC3C,EAAK5H,SAAS,CACZmH,WAAW,EACXC,eAAgBK,EAChBJ,WAAYK,EACZJ,YAAaK,EACbJ,WAAYK,IAEd,EAAKzB,SAAW5G,EAAS,WAAT,cAAakI,GAAb,mBAA8BC,GAA9B,YAA2CC,GAA3C,YAAyDC,KAAY,O,+BA+R/E,IAAD,OACP,OAAO5G,KAAKD,MAAMoG,UAChBnG,KAAKrB,MAAMkH,YAAc,KACvB,kBAAC,EAAD,MAGF,yBACEzF,UAAU,QACV6J,YAAajK,KAAK8J,gBAClBxJ,UAAW,SAAAT,GAAC,OAAI,EAAKC,cAAcD,KAElCG,KAAKD,MAAMwG,WAAW2D,IAAIlK,KAAKsI,gBAC/BtI,KAAKD,MAAMsG,WAAW6D,IAAIlK,KAAKmI,gBAC/BnI,KAAKD,MAAMuG,YAAY4D,IAAIlK,KAAKwI,kBAC/BxI,KAAKrB,MAAMkH,aAAe7F,KAAKD,MAAMqG,eAAe8D,IAAIlK,KAAK0I,oBAC9D1I,KAAKD,MAAM2J,sBACV,kBAAC,EAAD,CAAOnF,aAAcvE,KAAKD,MAAM2J,qBAAsB5K,SAAUkB,KAAKD,MAAMjB,YAE3EkB,KAAKrB,MAAMkH,aAAe,kBAAC,EAAD,CAAWjE,OAAQ5B,KAAKgH,sB,GApWxChG,aA0WLmJ,eACb,SAACpK,GAAD,MAAwB,CACtB4F,gBAAiB5F,EAAM4F,mBAEzB,KACA,KACA,CAAEyE,YAAY,GANDD,CAObjF,GC/RamF,E,YAxGb,WAAY1L,GAAgB,IAAD,8BACzB,4CAAMA,KAiBRe,OAAS,WACP,EAAKf,MAAMgB,SAAS,EAAKhB,MAAMqF,QAnBN,EAsB3B9E,KAAO,WACL,EAAKF,SAAS,CAAEG,SAAS,KAvBA,EA0B3BmL,SAAW,WACT,EAAK3L,MAAMU,SAAU,EAAKE,KAAKgL,QAAgB9K,MAAO,EAAKd,MAAMqF,OACjE,EAAKhF,SAAS,CAAEG,SAAS,KA5BA,EA+B3BqL,sBAAwB,WACtB,IAEMC,EAAezO,OAAOsB,YACtBoN,EAAc1O,OAAOoB,WAErBuN,EAAW9N,KAAKD,IACnB,KAAqB8N,EACrB,KAAsBD,GAEzB,EAAKzL,SAAS,CAAE4L,MAAO/N,KAAKF,IAAI,EAAIgO,EAAU,OAzCrB,EA4C3B9J,WAAa,WACX,OACE,yBAAKT,UAAU,WACb,yBAAKA,UAAU,eACb,2BACEH,IAAI,UACJ4K,KAAK,OACLnK,aAAc,EAAK/B,MAAMmM,SACzBC,KAAM,GACNC,WAAS,IAEX,4BAAQvK,QAAS,EAAK6J,SAAUlK,UAAU,YACxC,yBAAKG,IAAI,GAAGC,IAAI,eAGpB,yBAAKJ,UAAU,cA3DM,EAgE3BU,cAAgB,WACd,OACE,yBAAKV,UAAU,WACb,yBAAKA,UAAU,eACb,kBAAC6K,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAU7O,GAAG,kBACpC,yBAAK8D,UAAU,UAGjB,kBAAC6K,EAAA,EAASG,KAAV,KACE,kBAACH,EAAA,EAASI,KAAV,CAAe5K,QAAS,kBAAM,EAAK9B,MAAM2M,kBAAkB,EAAK3M,MAAMrC,MAAtE,8CAGA,kBAAC2O,EAAA,EAASI,KAAV,CAAe5K,QAAS,EAAKvB,MAA7B,kFACA,kBAAC+L,EAAA,EAASI,KAAV,CAAe5K,QAAS,EAAKf,QAA7B,gDAGJ,yBAAKU,UAAU,eAAe,EAAKzB,MAAMmM,WAG3C,yBAAK1K,UAAU,oBACf,yBACEA,UAAU,cACVtC,MAAO,CAAEyF,UAAU,SAAD,OAAW,EAAKxD,MAAM6K,MAAtB,KAAgC1N,OAAQ,EAAGD,MAAO,IAEpE,kBAAC,EAAD,CAAOX,GAAI,EAAKqC,MAAMrC,GAAI2D,IAAK,KAAM8G,OAAQ,GAAIlB,aAAa,OAtFpE,EAAK9F,MAAQ,CACXZ,SAAS,EACTyL,MAAO,GALgB,E,iFAUzB5O,OAAOuP,iBAAiB,SAAUvL,KAAKwK,uBACvCxK,KAAKwK,0B,6CAILxO,OAAOwP,oBAAoB,SAAUxL,KAAKwK,yB,+BAiF1C,OAAIxK,KAAKD,MAAMZ,QACNa,KAAKa,aAELb,KAAKc,oB,GApGIC,IAAMC,W,iBCAtByK,GAAM5G,EAAQ,KAqBd6G,G,YAIJ,WAAY/M,GAAQ,IAAD,uBACjB,4CAAMA,KAHAwG,SAAmB,EAER,EA4CnBwG,QAAU,SAACC,GAAD,OAA0B,EAAKjN,MAAMgN,QAAQ,CAAEE,YAAa,EAAK9L,MAAM+L,YA5C9D,EA8CnBC,WAAa,SAAAC,GACX,IAAM/E,EAAM,EAAKlH,MAAM+L,SAEvB7E,EAAIO,KAAK,CACPlL,GAAI,EAAKmL,SACTL,KAAM4E,EACNpF,SAAU,GACVD,UAAW,GACXD,SAAU,GACVD,aAAc,GACdwF,WAAY,OAGd,EAAKN,QAAQ,CAAEE,YAAa5E,IAAOH,MAAK,kBAAM,EAAK9H,SAAS,CAAE8M,SAAU7E,QA3DvD,EA8DnBiF,YAAc,SAAC3B,EAAS5O,GACtB,IAAMsL,EAAM,EAAKlH,MAAM+L,SACvB7E,EAAItL,GAAGyL,KAAOmD,EAEd,EAAKoB,QAAQ,CAAEE,YAAa5E,IAAOH,MAAK,kBAAM,EAAK9H,SAAS,CAAE8M,SAAU7E,QAlEvD,EAqEnBkF,cAAgB,SAAAnI,GACd,IAAMiD,EAAM,EAAKlH,MAAM+L,SACjBM,EAAMnF,EAAIjD,GAMhB,OAJAiD,EAAIjE,OAAOgB,EAAO,GAElB,EAAK2H,QAAQ,CAAEE,YAAa5E,IAAOH,MAAK,kBAAM,EAAK9H,SAAS,CAAE8M,SAAU7E,OAEjEmF,GA7EU,EAgFnBC,kBAAoB,SAACC,EAAS3Q,GAC5B,OACE,kBAAC,EAAD,CACEyM,IAAKkE,EAAQhQ,GACbA,GAAIgQ,EAAQhQ,GACZ0H,MAAOrI,EACP2P,kBAAmB,SAAAhP,GAAE,OAAI,EAAKqC,MAAM4N,QAAQ/E,KAAnB,sBAAuClL,KAChE+C,SAAU,EAAK6M,YACfvM,SAAU,EAAKwM,eAEdG,EAAQlF,OA1FI,EA+FnBoF,SAAW,SAAA1N,GACT,EAAKE,SAAS,CAAEF,cAhGC,EAmGnB2N,WAAa,SAAAvO,GACX,IACMwO,EADM,EAAK3M,MAAM+L,SACJ/E,QACjB,SAAAvI,GAAK,OAA4E,IAAxEA,EAAM4I,KAAKuF,cAAcC,QAAQ1O,EAAM2O,OAAOpN,MAAMkN,kBAE/D,EAAK3N,SAAS,CAAE8N,eAAgBJ,KAxGf,EA0GnBK,UAAY,SAAA7O,GACVA,EAAM8O,kBA3GW,EA8GnBC,OAAS,WACPC,KAA+BC,cAC5BF,SACAnG,MAAK,kBAAM9K,OAAOC,SAASmR,aA9G9B,IACMC,EADuBH,KAA+BC,cACtBG,cAJrB,OAMjB,EAAKvN,MAAQ,CACXjB,SAAU,OACVyO,UAAU,EACVzB,SAAUL,GAAI,EAAK9M,MAAM6O,IAAIC,KAAM,wBAAyB,IAC5DX,eAAgB,GAChB1F,KAAM,CACJsG,UAAWL,EAASK,UACpBC,SAAUN,EAASM,WAbN,E,iFAmBjB3N,KAAKhB,SAAS,CAAE8M,SAAUL,GAAIzL,KAAKrB,MAAM6O,IAAIC,KAAM,wBAAyB,MAC5EzN,KAAKhB,UAAS,SAAAe,GAAK,MAAK,CAAE+M,eAAgB/M,EAAM+L,e,yCAIhDjN,EACA6E,GASA,GAN0B,OAAxB1D,KAAKrB,MAAM6O,IAAIC,MACfhC,GAAI5M,EAAU2O,IAAIC,KAAM,UAAYzN,KAAKrB,MAAM6O,IAAIC,KAAK7R,OAExDoE,KAAKhB,SAAS,CAAE8M,SAAUL,GAAIzL,KAAKrB,MAAM6O,IAAIC,KAAM,wBAAyB,MAC5EzN,KAAKhB,UAAS,SAAAe,GAAK,MAAK,CAAE+M,eAAgB/M,EAAM+L,cAE9C9L,KAAKrB,MAAM6O,IAAII,WAAa5N,KAAKrB,MAAM6O,IAAIrH,UAAW,CACxD,IAAM0H,EAAM7N,KAAKD,MAAM+L,SAAS5B,KAAI,SAAA4D,GAAO,OAAIA,EAAQxR,MACvD0D,KAAKmF,SAAW0I,EAAIhS,OAAS,EAAIgB,KAAKD,IAAImR,MAAM,KAAMF,GAAO,EAAI,K,+BAKnE,OAAO7N,KAAKmF,a,+BA2EJ,IAAD,SACwBnF,KAAKD,MAA5BwN,EADD,EACCA,SAAUzO,EADX,EACWA,SAClB,OACE,oCACE,yBAAKsB,UAAU,UACb,kBAAC4N,EAAA,EAAD,CAAQC,MAAM,MAAM7N,UAAU,UAC5B,kBAAC8N,EAAA,EAAD,CAAK9N,UAAU,WACb,kBAAC4N,EAAA,EAAOG,KAAR,KACE,uBAAG/N,UAAU,UACVJ,KAAKD,MAAMqH,KAAKsG,UAAY1N,KAAKD,MAAMqH,KAAKsG,UAAUU,OAAO,EAAG,GAAK,KAG1E,kBAACJ,EAAA,EAAOG,KAAR,KACE,yBAAK/N,UAAU,QACZJ,KAAKD,MAAMqH,KAAKsG,UADnB,IAC+B1N,KAAKD,MAAMqH,KAAKuG,YAInD,kBAACU,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWJ,KAAZ,CAAiB7R,GAAG,gBAClB,yBAAKiE,IAAI,GAAGC,IAAI,kBAGpB,kBAACiO,EAAA,EAAD,CACE5D,KAAK,OACL6D,YAAY,iCACZtO,UAAU,UACVf,SAAUW,KAAKyM,iBAOzB,yBAAKrM,UAAU,WACb,kBAAC,IAAD,CAASoM,SAAUxM,KAAKwM,SAAUmC,gBAAiBpB,GACjD,kBAAC,IAAQW,IAAT,CAAapP,SAAUA,GACrB,kBAAC,UAAD,CAAS2B,QAAST,KAAKiN,OAAQ2B,SAAS,YACtC,kBAAC,UAAD,CAAS9Q,MAAO,CAAE+Q,YAAa,IAAMC,MAAM,WACzC,2EAOV,yBAAK1O,UAAU,WACZJ,KAAKrB,MAAM6O,IAAIrH,UACd,kBAAC,EAAD,MAEA,oCACGnG,KAAKD,MAAM+M,eAAe5C,IAAIlK,KAAKqM,mBACpC,yBAAKjM,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAf,mCAEF,yBAAKA,UAAU,eACb,4BAAQK,QAAS,kBAAM,EAAKsL,WAAW,iEAAe3L,UAAU,aAC9D,yBAAKG,IAAI,GAAGC,IAAI,yB,GApLbQ,aAgMRmJ,gBACb,SAACpK,GAAD,MAAwB,CACtByN,IAAKzN,EAAMyN,OAEb,CACE7B,QCvOmB,SAACC,GACtB,OAAO,SAACmD,EAAUC,GAChB,OAAOD,EAAS,CACdE,QAAS,WACPF,EAAS,CAAElE,KARa,qBAUxB,IAAM9K,EAAoBiP,IAM1B,OAJ0CjP,EAAM4F,gBAIzBuJ,cAActD,EAAW7L,EAAMyN,IAAIC,KAAK7R,SAGhEkL,MAAK,SAACqI,GAEL,OADAJ,EAAS,CAAElE,KAnBa,mBAmBWuE,QAASD,IACrCA,KAERE,OAAM,SAACC,GAEN,MADAP,EAAS,CAAElE,KAtBa,mBAsBWuE,QAASE,IACtCA,QD6MCnF,CAObuB,IEzLa6D,I,iNA7CbxP,MAAQ,CACNjB,SAAU,Q,EAGZ0N,SAAW,SAAA1N,GACT,EAAKE,SAAS,CAAEF,aAChB,EAAKH,MAAM6Q,cAAc1Q,I,wEAGjB,IACAA,EAAakB,KAAKD,MAAlBjB,SAER,OACE,yBAAKsB,UAAU,WACb,kBAAC,IAAD,CAASoM,SAAUxM,KAAKwM,UACtB,kBAAC,IAAQ0B,IAAT,CAAapP,SAAUA,GACrB,kBAAC,UAAD,CAAS8P,SAAS,QAChB,kBAAC,UAAD,KACE,0FAGJ,kBAAC,UAAD,CAASA,SAAS,QAChB,kBAAC,UAAD,KACE,yBAAKrO,IAAI,GAAGC,IAAI,kBAIpB,kBAAC,UAAD,CAASoO,SAAS,QAChB,kBAAC,UAAD,KACE,yBAAKrO,IAAI,GAAGC,IAAI,kBAIpB,kBAAC,UAAD,CAASoO,SAAS,SAChB,kBAAC,UAAD,KACE,yBAAKrO,IAAI,GAAGC,IAAI,0B,GApCVO,IAAMC,YC0EbyO,G,YA5Db,WAAY9Q,GAAQ,IAAD,uBACjB,4CAAMA,KAHA+Q,gBAEW,IAYnBF,cAAgB,SAAA/P,GACd,EAAKT,SAAS,CAAEF,SAAUW,KAbT,EAgBnBkQ,YAAc,kBAAO,EAAKpQ,KAAKqQ,MAAcxQ,MAAK,kBAAM,EAAKT,MAAM4N,QAAQ/E,KAAK,SAb9E,IAAMqI,EAAS,EAAKlR,MAAM1C,SAAS4T,OAC7BC,EAAS,IAAIC,gBAAgBF,GAJlB,OAMjB,EAAK9P,MAAQ,CACXjB,SAAU,OACVxC,GAAI0T,OAAOC,SAASH,EAAOrE,IAAI,QARhB,E,sEAkBT,IAAD,OACP,OACE,yBAAKrL,UAAU,MACb,yBAAKA,UAAU,UACb,kBAAC4N,EAAA,EAAD,CAAQC,MAAM,MAAM7N,UAAU,UAC5B,kBAAC4N,EAAA,EAAO9C,OAAR,CAAegF,gBAAc,qBAC7B,kBAAClC,EAAA,EAAOmC,SAAR,CAAiB7T,GAAG,oBAClB,kBAAC4R,EAAA,EAAD,CAAK9N,UAAU,WACb,kBAAC8N,EAAA,EAAIkC,KAAL,CAAU3P,QAAST,KAAK2P,aAAxB,kCACA,kBAACzB,EAAA,EAAIkC,KAAL,CAAU3P,QAAS,kBAAO,EAAKlB,KAAKqQ,MAAcvG,QAAQ,eACxD,yBAAK9I,IAAI,GAAGC,IAAI,WAAWsO,MAAM,iGAEnC,kBAACZ,EAAA,EAAIkC,KAAL,CAAU3P,QAAS,kBAAM1C,IAAE,eAAesS,UACxC,yBAAK9P,IAAI,GAAGC,IAAI,aAAasO,MAAM,qFAErC,kBAACZ,EAAA,EAAIkC,KAAL,CAAU3P,QAAS,kBAAO,EAAKlB,KAAKqQ,MAAcpG,SAAS,gBACzD,yBAAKjJ,IAAI,GAAGC,IAAI,YAAYsO,MAAM,2FAEpC,kBAACZ,EAAA,EAAIkC,KAAL,CAAU3P,QAAS,kBAAO,EAAKlB,KAAKqQ,MAAcxQ,SAAlD,0DACA,2BACEyL,KAAK,OACLvO,GAAG,aACH2D,IAAK,SAAAA,GAAG,OAAK,EAAKyP,WAAazP,GAC/B6B,OAAO,aACPzC,SAAU,kBAAO,EAAKE,KAAKqQ,MAAc5I,eAAe,EAAK0I,WAAWxI,QACxEpJ,MAAO,CAAEqG,QAAS,cAO5B,kBAAC,GAAD,CAASqL,cAAexP,KAAKwP,gBAE7B,kBAAC,IAAD,CAAac,QAASC,KACpB,kBAAC,EAAD,CAAOjU,GAAI0D,KAAKD,MAAMzD,GAAI2D,IAAI,QAAQ8G,OAAQ/G,KAAKD,MAAMjB,iB,GAxDzCiC,IAAMC,WNnB1B4D,GAAKC,EAAQ,IAAmBC,KAAKD,EAAQ,O,SAE9CG,K,QAAAA,E,QAAAA,E,SAAAA,M,cAMAC,K,gBAAAA,E,oBAAAA,E,aAAAA,M,SAaCuL,G,iLAQM,IAAD,IACuCxQ,KAAKrB,MAA3CoM,EADD,EACCA,KAAM0F,EADP,EACOA,OAAQ3F,EADf,EACeA,SAAU1K,EADzB,EACyBA,UAC1BsQ,EAAM3F,EAEZ,OACE,gBAAC2F,EAAD,CACEtQ,UAAWwE,GAAGxE,GAAD,GACX0O,OAAO,GADI,mCAEI/D,GAASA,GAFb,qCAGM0F,GAAWA,GAHjB,KAMZ3F,O,GApBW/J,iBAAdyP,GACGG,KAAO3L,EADVwL,GAEGI,OAAS3L,EAFZuL,GAIUK,aAAqC,CACjD9F,KAAMyF,GAAMG,KAAKG,IAqBNN,UO/CT5L,GAAKC,EAAQ,IAAmBC,KAAKD,EAAQ,MAmCpCkM,G,2MAvBbtQ,QAAU,SAACvC,GAAD,OACR,EAAKS,MAAM8B,SAAW,EAAK9B,MAAM8B,QAAQvC,I,wEAEjC,IAAD,EAC8D8B,KAAKrB,MAAlEmM,EADD,EACCA,SAAUxO,EADX,EACWA,GAAI8D,EADf,EACeA,UAAW4Q,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,WAAY9K,EADhD,EACgDA,UAEvD,OACE,0BACE7J,GAAIA,EACJ8D,UAAWwE,GAAGxE,EAAW,CACvB8Q,QAAQ,EACRC,eAAgBhL,IAElB0E,KAAMmG,EAAW,SAAW,SAC5BhL,SAAUiL,EACVxQ,QAAST,KAAKS,SAEd,wBAAML,UAAWwE,GAAG,oBAAqBkG,Q,GAlB5B/J,iBCLf6D,GAAKC,EAAQ,IAAmBC,KAAKD,EAAQ,MAwCpCuM,G,2MA5BbrR,MAAQ,CACNoG,WAAW,EACXkL,SAAS,G,EAGX5Q,QAAU,SAAAvC,GACR,IAAMoT,EAAwBpE,KAA+BC,cAC7D,EAAKnO,SAAS,CAAEmH,WAAW,IAC3BmL,EAAsBC,MAAMC,KAAmBC,aAAa3K,MAAK,WAC/D,EAAK9H,SAAS,CAAEmH,WAAW,IAC3B,EAAKxH,MAAM+S,YAAW,O,wEAKxB,OACE,uBAAKtR,UAAWwE,GAAG,sBACjB,gBAAC,GAAD,2GACC5E,KAAKD,MAAMsR,QACV,mEAEA,gBAAC,GAAD,CAAQ5Q,QAAST,KAAKS,SAAtB,2G,GAtBqBM,a,UCPzB6D,GAAKC,EAAQ,IAAmBC,KAAKD,EAAQ,MAgB7C8M,G,2MACJ5R,MAAQ,CACNoG,WAAW,EACXyL,aAAc,M,EAqBhBC,YAAc,WACZ,OAAO,EAAKlT,MAAMmT,uBAAuBhL,MAAK,kBAAM,EAAKnI,MAAMoT,a,EAGjEL,WAAa,SAACM,GAEZ,GADA,EAAKhT,SAAS,CAAEmH,WAAW,IACvB6L,EACF,OAAO,EAAKH,cAAc/K,MAAK,kBAAM,EAAK9H,SAAS,CAAE4S,cAAc,EAAMzL,WAAW,OAEpF,EAAKnH,SAAS,CAAE4S,cAAc,EAAOzL,WAAW,K,mFA3B/B,IAAD,OACY+G,KAA+BC,cAE1D8E,mBACAnL,MAAK,SAAAkL,GACJ,GAAIA,EACF,OAAO,EAAKH,cAAc/K,MAAK,kBAC7B,EAAK9H,SAAS,CAAE4S,cAAc,EAAMzL,WAAW,OAGjD,EAAKnH,SAAS,CAAE4S,cAAc,EAAOzL,WAAW,OAGnDkJ,OAAM,SAAA6C,GAAK,OAAI,EAAKlT,SAAS,CAAE4S,cAAc,EAAOzL,WAAW,S,+BAmBlE,OAAOnG,KAAKD,MAAMoG,UAChB,gBAAC,EAAD,MACEnG,KAAKD,MAAM6R,aACb,gBAAC,IAAD,KACE,uBAAKxR,UAAWwE,GAAG,QACjB,gBAAC,IAAD,CAAOuN,OAAK,EAACC,KAAK,IAAIC,UAAW3G,KACjC,gBAAC,IAAD,CAAO0G,KAAK,WAAWC,UAAW5C,OAItC,gBAAC,GAAD,CAAkBiC,WAAY1R,KAAK0R,iB,GAhDvB3Q,iBAqDHoJ,gBACb,SAACpK,GAAD,MAAwB,CACtByN,IAAKzN,EAAMyN,OAEb,CACEuE,OC9EkB,WACpB,OAAO,SAAChD,EAAUC,GAChB,OAAOD,EAAS,CACdE,QAAS,WACPF,EAAS,CAAElE,KATY,oBAWvB,IAAMlF,EAAqCqJ,IAA0BrJ,gBAErE,OAAOA,EAAgB2M,gBAAgBxL,MAAK,SAAAwL,GAC1C,OAAOA,EAAgB3M,EAAgB4M,iBAAmB5M,EAAgB6M,mBAI7E1L,MAAK,SAACqI,GAEL,OADAJ,EAAS,CAAElE,KAlBY,kBAkBWuE,QAASD,IACpCA,KAERE,OAAM,SAACC,GAEN,MADAP,EAAS,CAAElE,KArBY,kBAqBWuE,QAASE,IACrCA,OD4DVwC,qBElFgC,WAClC,OAAO,SAAA/C,GACL,OAAOA,EAAS,CACdE,QAAS,WACP,IAAMwD,EAAiB,IAAIC,mBAG3B,OADA3D,EAAS,CAAElE,KAR0B,gCAQWuE,QAASqD,IAClD,IAAIE,SAA8B,SAAAC,GAAO,OAAIA,EAAQH,YFqErDtI,CAQbwH,I,yzBGrFK,IAIDkB,GAAUC,aAAgB,CAC9BnN,gBCHO,WAA0D,IAAzD5F,EAAwD,uDAFpB,KAEbgT,EAAiC,uCACtDlI,EAAkBkI,EAAlBlI,KAAMuE,EAAY2D,EAAZ3D,QAEd,OAAQvE,GACN,IFPuC,gCEQrC,OAAOuE,EAET,QACE,OAAOrP,IDJbyN,IEAwB,WACxB,IAAMwF,EAA2B,CAC/BvF,KAAM,KACNtH,WAAW,EACXyH,UAAU,GAGZ,OAAO,WAA+C,IAA9C7N,EAA6C,uDAArCiT,EAAeD,EAAsB,uCAC3ClI,EAAkBkI,EAAlBlI,KAAMuE,EAAY2D,EAAZ3D,QAEd,OAAQvE,GACN,IJlByB,kBImBvB,OAAO,MACF9K,EADL,CAEEoG,WAAW,IAGf,IJvByB,kBIwBvB,OAAO,MACFpG,EADL,CAEE0N,KAAM2B,EACNjJ,WAAW,EACXyH,UAAU,IAGd,IJ9ByB,kBI+BvB,OAAO,MACF7N,EADL,CAEEoG,WAAW,EACXyH,UAAU,IAGd,IVtC0B,mBUuCxB,OAAO,MACF7N,EADL,CAEEoG,WAAW,IAGf,IV3C0B,mBU4CxB,OAAO,MACFpG,EADL,CAEE0N,KAAK,MAAM1N,EAAM0N,KAAb,CAAmB7R,KAAMwT,IAC7BjJ,WAAW,EACXyH,UAAU,IAGd,IVlD0B,mBUmDxB,OAAO,MACF7N,EADL,CAEEoG,WAAW,EACXyH,UAAU,IAGd,QACE,OAAO7N,IFtDRkT,KAKMC,GAAc,SAACnT,EAAmBgT,GAC7C,GAZyB,gBAYrBA,EAAOlI,KAAsB,CAC/B,IAAMsI,EAAeN,QAAQO,EAAWL,GAExChT,E,2VAAK,IACAA,EADA,CAEH4F,gBAAiBwN,EAAaxN,gBAC9B6H,IAAK2F,EAAa3F,MAItB,OAAOqF,GAAQ9S,EAAOgT,I,UGlBlBM,GAAgB,CACpB1N,gBAAiB,KACjB6H,IAAK,CACHC,KAAM,KACNtH,WAAW,EACXyH,UAAU,IAOR0F,GAAiD,SAAC,GAA4B,IAA1BvE,EAAyB,EAAzBA,SAAyB,EAAfC,SAClE,OAAO,SAAAuE,GAAI,OAAI,SAAAR,GACb,GAAsB,qBAAXA,EAAX,CAKA,IAAKS,sBAAWT,EAAO9D,SACrB,OAAOsE,EAAKR,GAGd,IAAMU,EAAgBV,EAAO9D,UAE7B,OAAewE,EAfkB3M,MAmBjCiM,EAAOlI,MAAQkE,EAAS,CAAElE,KAAMkI,EAAOlI,KAAMuE,QAAS2D,EAAO3D,UAG3DqE,EAEG3M,MAAK,SAACqI,GACL,OAAOA,KAGRE,OAAM,SAACC,GACN,MAAMA,MAbHiE,EAAKR,OCxBZW,GD2CiB,WACrB,IAAMC,EAAc,CAACL,GAAeM,MAEpCD,EAAYnM,KAAKqM,wBAAa,CAAEC,WAAW,KAE3C,IAAMC,EACe,kBAAX/X,QAAwBA,OAAegY,sCAAyCC,KAE1F,OAAOC,aACLhB,GACAG,GACAU,EAAkBI,KAAD,aAA4BR,KCtDnCS,GAEdlH,KAA+BmH,iBAE/BC,IAASC,OACP,kBAAC,IAAD,CAAUb,MAAOA,GAAOtL,IAAI,YAC1B,kBAAC,GAAD,OAGFxK,SAASC,eAAe,SxB0GpB,kBAAmB2W,WACrBA,UAAUC,cAAcC,MAAM5N,MAAK,SAAA6N,GACjCA,EAAaC,iB,oCyB1HPpD,E,oCCWUqD,EAAtB,sCACWC,yBADX,GCdaC,EAAb,WACE,WAAoBC,GAAgB,yBAAhBA,QADtB,mDAGSC,EAA+BC,GACpC,OAAO,IAAIvC,SAAuB,SAAAjR,GAChC,IAAMyT,EAAcC,KAAKC,KAAKC,WAAWC,aAEzCN,EAASO,aAAUpC,EAEnB,IAAMqC,EAAO,IAAIC,SACjBD,EAAKE,OAAO,WAAY,IAAIC,KAAK,CAACC,KAAKC,UAAUb,IAAY,CAAEpK,KAAM,sBACrE4K,EAAKE,OAAO,OAAQT,EAAKA,KAAM,iBAE/Ba,MAAM,kFAAmF,CACvFC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACnBC,cAAe,UAAYhB,IAE7BD,KAAMO,IAEL3O,MAAK,SAAAsP,GACJ,OAAOA,EAAIC,UAEZvP,MAAK,SAAA/C,GACJrC,EAAEqC,EAAIzH,YAxBhB,kCA6Bcga,GACV,OAAO,IAAI3D,SAAiB,SAAAjR,GAC1B1F,OAAOoZ,KAAKmB,OAAOC,MAAMtP,MACtBuE,IAAI,CACH7C,OAAQ0N,IAETxP,MACC,WACEpF,GAAE,MAEJ,WACEA,GAAE,WAxCd,sCA8CkB0F,EAAcoO,GAC5B,OAAO,IAAI7C,SAAmC,SAAAjR,GAC5C1F,OAAOoZ,KAAKmB,OAAOC,MAAMtP,MACtBuP,KAAK,CACJC,EAAE,WAAD,OAAatP,EAAb,OAEFN,MAAK,SAAAqI,GACJwH,QAAQC,IAAI,MAAOzH,GACnB,IAAM/N,EAAO+N,EAAS0H,OAAO3P,MAAM,GACnCxF,EAAEN,EAAOA,EAAK9E,QAAK8W,WAvD7B,2BA4DOkD,GACH,OAAO,IAAI3D,SAAgB,SAAAjR,GACzB1F,OAAOoZ,KAAKmB,OAAOC,MAAMtP,MACtBuE,IAAI,CAEH7C,OAAQ0N,EACR/V,IAAK,UAENuG,MAAK,SAAAqI,GACJzN,EAAEyN,EAAS+F,cArErB,6BA0ESoB,GACL,OAAO,IAAI3D,SAAc,SAAAjR,GACvB1F,OAAOoZ,KAAKmB,OAAOC,MAAMtP,MACtB4P,OAAO,CACNlO,OAAQ0N,IAETxP,MAAK,kBAAMpF,cAhFpB,KCIaqV,EAAb,YAQE,WAAYC,GAA+B,IAAD,8BACxC,+CARFlC,oBAAsBtD,EAAmBC,YAOC,EALlCwF,SAAkC,KAKA,EAJlCjC,MAAQ,aAI0B,EAHlC5N,KAAO8P,aAAa/P,QAAQ,aAGM,EAFlCgQ,WAAaD,aAAa/P,QAAQ,cAIpC6P,IACF,EAAKhC,MAAQgC,EAAYhC,OAHa,EAR5C,2EAgBI,MAAO,CACLtH,UAAW1N,KAAKoH,KAChBuG,SAAU3N,KAAKmX,cAlBrB,6BAsByB,IAAD,OACpB,OAAOnX,KAAKoX,YACTtQ,MAAK,kBAAM,EAAKuQ,kBAChBvQ,MAAK,SAACwQ,GACDA,IACF,EAAKL,SAAW,IAAIlC,EAAe,EAAKC,aA3BlD,kCAiCI,OAAO,IAAIrC,SAAQ,SAAAjR,GACjB1F,OAAOoZ,KAAKmC,KAAK,gBAAgB,WAC/B,IAAMtI,EAAUjT,OAAOoZ,KAAKmB,OAAOiB,KAAK,CACtCC,OAAQ,0CACRC,cAAe,CAAC,8DAChBC,SAAU,2EACVC,MACE,+UAQJlW,EAAEuN,WAhDV,8BAqD+B,IAAD,OAC1B,OAAOjP,KAAK6X,aAAa/Q,MAAK,SAAAkO,GAG5B,OAFA,EAAKA,MAAQA,EACb,EAAKiC,SAAW,IAAIlC,EAAe,EAAKC,OACjC,CAAEA,MAAO,EAAKA,YAzD3B,+BA6D2B,IAAD,OACtB,OAAOhV,KAAK8X,eAAehR,MAAK,WAC9B,EAAKkO,MAAQ,KACb,EAAKiC,SAAW,UAhEtB,oCAqEI,OAAOjX,KAAKiX,WArEhB,qCAyEI,OAAOjX,KAAK+X,YAAYjR,MAAK,SAAAkR,GAC3B,OAAOA,OA1Eb,mCA8EwB,IAAD,OACnB,OAAOhc,OAAOoZ,KAAK6C,MAChBC,kBACAC,SACArR,MAAK,SAAAsR,GAKJ,OAJA,EAAKhR,KAAOgR,EAAWC,kBAAkBC,eACzC,EAAKnB,WAAaiB,EAAWC,kBAAkBE,gBAC/CrB,aAAasB,QAAQ,YAAa,EAAKpR,MACvC8P,aAAasB,QAAQ,aAAc,EAAKrB,YACjCiB,EAAWK,kBAAkBC,cAvF5C,qCA4FI,OAAO1c,OAAOoZ,KAAK6C,MAAMC,kBAAkBS,YA5F/C,kCAgGI,OAAO,IAAIhG,SAAiB,SAAAjR,GAC1B1F,OAAOoZ,KAAK6C,MAAMC,kBAAkBpR,MAAK,SAAAsR,GACvC1W,EAAE0W,EAAWQ,YAAYnN,MAAMuM,wBAlGvC,GAAwCnD,G,SCN3BgE,EAAkC,uBAElCC,EAAb,YACE,aAAe,qEACPD,IAFV,uCAA2CE,S,SJG/BvH,K,4BAAAA,M,KASL,IAAMwH,EAAb,iDACUC,QAA+B,KADzC,+DAOwC,IAAD,OACnC,OAA4C,OAAxC/B,aAAa/P,QAAQ,gBACvBnH,KAAKkZ,2BAA2B1H,EAAmBC,aAC5CzR,KAAKiZ,QAAQzB,OAAO1Q,MAAK,kBAAM,EAAKmS,QAAQ5B,mBAE5C,IAAI1E,SAAiB,SAAAjR,GAC1BA,GAAE,QAbV,gDAsBI,IAAK1B,KAAKsX,WACR,MAAM,IAAIwB,EAGZ,OAAO9Y,KAAKiZ,QAAQnE,sBA1BxB,4BAgCQqE,EAAmCC,GAAoC,IAAD,OAO1E,OANIpZ,KAAKiZ,SACPjd,OAAOC,SAASmR,SAGlBpN,KAAKkZ,2BAA2BC,GAEzBnZ,KAAKiZ,QACTzB,OACA1Q,MAAK,kBAAM,EAAKmS,QAAQ1H,WACxBzK,MAAK,SAAA2G,GAAI,OAAI,EAAK4L,aAAa5L,MAC/B4B,OAAM,SAAAxP,GAGL,MAFA,EAAKoZ,QAAU,KACf,EAAKK,gBACCzZ,OA9Cd,+BAqD2B,IAAD,OACtB,IAAKG,KAAKsX,WACR,MAAM,IAAIwB,EAGZ,OAAO9Y,KAAKiZ,QAAQhM,SAASnG,MAAK,WAChC,EAAKwS,gBACL,EAAKL,QAAU,UA5DrB,oCAoEI,IAAKjZ,KAAKsX,WACR,MAAM,IAAIwB,EAGZ,OAAO9Y,KAAKiZ,QAAQ3L,gBAxExB,oCA+EI,IAAKtN,KAAKsX,WACR,MAAM,IAAIwB,EAGZ,OAAO9Y,KAAKiZ,QAAQM,gBAnFxB,sCAuFIrC,aAAasC,UAvFjB,mCA0FuB/L,GACnB,IAAMgM,EAA8B,CAClCC,SAAUlI,EAAmBC,YAC7BhE,QAEFyJ,aAAasB,QAAQ,cAAe3C,KAAKC,UAAU2D,MA/FvD,iDAkGqCN,EAAmCQ,GACpE,OAAQR,GACN,KAAK3H,EAAmBC,YACtBzR,KAAKiZ,QAAU,IAAIlC,EAAmB4C,GACtC,MACF,QACE,MAAM,IAAIZ,MAAM,2BAxGxB,iCAII,QAAS/Y,KAAKiZ,YAJlB,KKTa/L,EAAb,2GAII,IAAKlN,KAAK4Z,SACR,MAAM,IAAIb,MAAM,eAGlB,OAAO/Y,KAAK4Z,WARhB,uCAcI,OAFA5Z,KAAK4Z,SAAW,IAAIZ,EAEbhZ,KAAK4Z,WAdhB,wCAkBI,QAAS5Z,KAAK4Z,aAlBlB,KAAa1M,EACI0M,c,ECNjB,qE,yXCOalH,EAAb,iDACmBmH,SAAW,YAD9B,KAGmBC,iBAAmB,qCAHtC,KAImBC,kBAAoB,gBAJvC,KAMUC,qBAAuB9M,IAA+BC,cANhE,KAOU8J,SAAWjX,KAAKga,qBAAqBT,cAP/C,KAQUU,oBARV,yDAWIC,EACA9S,EACA+S,EACAze,GAEA,IAAMuZ,EAAgC,CACpC7N,OACAoO,QAAS,CAACxV,KAAK6Z,SAAUK,EAAU/Z,aAGrC,OAAOH,KAAKoa,cAAcD,EAAUze,EAASuZ,KArBjD,uCAyBI,IAAKjV,KAAKia,eACR,MAAM,IAAIlB,MAAM,4BAGlB,OAAO/Y,KAAKiX,SAASM,KAAKvX,KAAKia,gBAAgBnT,MAAK,SAACuT,GACnD,MAAO,CACLze,KAAMH,YAAa4e,GAAMla,WACzByL,UAAWiK,KAAKyE,MAAMD,SAhC9B,mCAqC4C,IAAD,OACvC,OAAOra,KAAKua,YAAY,CAAE1O,YAAa,KAAM/E,MAAK,kBAAM,EAAKyL,sBAtCjE,oCAyCgBxS,EAAkBya,GAAmC,IAAD,OAEhE,OAAOxa,KAAKiX,SAASvX,OAAOM,KAAKia,gBAAgBnT,MAAK,kBAAM,EAAKyT,YAAYxa,QA3CjF,sCA8CqC,IAAD,OAChC,OAAOC,KAAKiX,SACTwD,gBAAgBza,KAAK+Z,kBAAmB,CAAC/Z,KAAK6Z,WAC9C/S,MAAK,SAACxK,GAKL,OAJIA,IACF,EAAK2d,eAAiB3d,KAGfA,OAtDjB,mCA0DeA,GACX,OAAO0D,KAAKiX,SAASM,KAAKjb,KA3D9B,yCA8DqB4d,GACjB,OAAOla,KAAKiX,SAASyD,OAAO,CAC1BtT,KAAM8S,EAAU/Z,WAChBqV,QAAS,CAACxV,KAAK6Z,UACfM,SAAUna,KAAK8Z,qBAlErB,yCAsEqBa,GACjB,OAAO3a,KAAKqI,WAAWsS,KAvE3B,iCA0Eare,GACT,OAAO0D,KAAKiX,SAASvX,OAAOpD,KA3EhC,kCA8EcwR,GAA0C,IAAD,OACnD,OAAO9N,KAAKuS,iBACTzL,MAAK,qBAAG8E,aACR9E,MAAK,SAAC8E,GAIL,OAHAA,EAAUC,YAAcD,EAAUC,YAC/B9E,QAAO,SAAC6T,GAAD,OAAOA,EAAEte,KAAOwR,EAAQxR,MAC/BiN,OAAOuE,GACHlC,KAER9E,MAAK,SAAC8E,GAAD,OAA0B,EAAKsD,cAActD,EAAW,aAvFpE,iCA0FasO,GACT,OAAOla,KAAKuS,iBACTzL,MAAK,qBAAG8E,aACR9E,MAAK,SAAC8E,GAAD,OAA0BA,EAAUC,YACrCgP,MAAK,SAACD,GAAD,OAAOA,EAAEte,KAAO4d,UA9FhC,kCAiGsBna,GAAmB,IAAD,OAC9BkV,EAAgC,CACpC7N,KAAMpH,KAAK+Z,kBACXvE,QAAS,CAACxV,KAAK6Z,WAGjB,OAAO7Z,KAAKoa,cACV,mBACA,IAAIxE,KAAK,CAACC,KAAKC,UAAU/V,IAAS,CAAE8K,KAAM,qBAC1CoK,GACAnO,MAAK,SAAAxK,GAEL,OADA,EAAK2d,eAAiB3d,EACfA,OA7Gb,oCAiHwB6d,EAAkBze,EAAeuZ,GACrD,IAAMC,EAAwB,CAC5BiF,WACAjF,KAAMxZ,GAGR,OAAOsE,KAAKiX,SAASyD,OAAOzF,EAAUC,OAvH1C,O","file":"static/js/main.62ea1c17.chunk.js","sourcesContent":["export * from './AppEntityResponse';\r\nexport * from './IDesktopsManager';\r\n\r\nexport * from './impl/DesktopsManager';\r\n","import { ReadStream } from 'fs';\r\n\r\nexport function hashStringV1(content: string): number {\r\n  let hash = 0;\r\n  let i;\r\n  let chr;\r\n  if (content.length === 0) {\r\n    return hash;\r\n  }\r\n  for (i = 0; i < content.length; i++) {\r\n    chr = content.charCodeAt(i);\r\n    hash = (hash << 5) - hash + chr;\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n  return hash;\r\n}\r\n\r\nexport function hashObjectV1(content: object): number {\r\n  return hashStringV1(JSON.stringify(content));\r\n}\r\n\r\nexport function ArrayBufferToBuffer(ab: ArrayBuffer): Buffer {\r\n  const buf = Buffer.alloc(ab.byteLength);\r\n  const view = new Uint8Array(ab);\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    buf[i] = view[i];\r\n  }\r\n  return buf;\r\n}\r\n\r\nexport function bufferToStream(buffer): ReadStream {\r\n  const stream = new ReadStream();\r\n  stream.push(buffer);\r\n  stream.push(null);\r\n  return stream;\r\n}\r\n\r\nexport function ArrayBufferToString(ab: ArrayBuffer): string {\r\n  return String.fromCharCode.apply(null, new Uint16Array(ab));\r\n}\r\n\r\nexport function StringToArrayBuffer(str: string): ArrayBuffer {\r\n  const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\r\n  const bufView = new Uint16Array(buf);\r\n  let i = 0;\r\n  const strLen = str.length;\r\n  for (; i < strLen; i++) {\r\n    bufView[i] = str.charCodeAt(i);\r\n  }\r\n\r\n  return buf;\r\n}\r\n","export * from './AppEntity';\r\nexport * from './DesktopEntity';\r\nexport * from './FileEntity';\r\nexport * from './IDesktopItem';\r\nexport * from './NoteEntity';\r\nexport * from './QuoteEntity';\r\nexport * from './RelationEntity';\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// todo: можем отказаться от проверки на тип (id сквозной) и, возмонжо от типа в целом.\r\nimport { IDesktopItem, RelationEntity } from './entities';\r\nimport $ from 'jquery';\r\n\r\nexport const isRelationHasItem = (relation: RelationEntity, id: number) =>\r\n  [relation.firstMemberId, relation.secondaryMemberId].includes(id);\r\n\r\nexport const randomBetween = (min, max) => {\r\n  return min + Math.ceil(Math.random() * max);\r\n};\r\n\r\nexport const generateRandomOffsetForDesktopItem = (\r\n  width,\r\n  height,\r\n): { offsetTop: number; offsetLeft: number } => ({\r\n  offsetLeft: randomBetween(0, window.innerWidth - width),\r\n  offsetTop: randomBetween(0, window.innerHeight - height),\r\n});\r\n\r\nexport const subscribeDesktopItemToDragDrop = (\r\n  input,\r\n  item: IDesktopItem,\r\n  onChangeFn: (IDesktopItem) => void,\r\n) => {\r\n  const el = document.getElementById('kostyl_' + item.id);\r\n  el.style.width = item.width + 'px';\r\n  el.style.height = item.height + 'px';\r\n  $(input).draggable({\r\n    drag: (event, ui) => {\r\n      const { left, top }: { [k: string]: number } = ui.position;\r\n      el.style.left = left + 'px';\r\n      el.style.top = top + 'px';\r\n\r\n      onChangeFn({\r\n        ...item,\r\n        offsetLeft: left,\r\n        offsetTop: top,\r\n      });\r\n    },\r\n  });\r\n};\r\n\r\nexport const calcMaxId = (...items: Array<{ id: number }>): number =>\r\n  items.reduce((max, { id }) => id > max ? max = id : max, 0);\r\n","import React from 'react';\r\nimport 'jquery-ui-dist/jquery-ui';\r\n\r\nimport './CSS/Note.css';\r\nimport './CSS/Board.css';\r\nimport { NoteEntity } from './entities';\r\nimport { subscribeDesktopItemToDragDrop } from './helpers';\r\n\r\ninterface IProps {\r\n  note: NoteEntity;\r\n  onChange: (newNote: NoteEntity) => void;\r\n  onRemove: (noteId) => void;\r\n  handleMouseDown: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, id: number) => void;\r\n  handleMouseUp: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, id: number) => void;\r\n  selected: string;\r\n}\r\n\r\ninterface IState {\r\n  editing: boolean;\r\n  style: any;\r\n  classFilter: string;\r\n}\r\n\r\nclass Note extends React.Component<IProps, IState> {\r\n  private input: any;\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editing: false,\r\n      style: {\r\n        left: this.props.note.offsetLeft + 'px',\r\n        top: this.props.note.offsetTop + 'px',\r\n      },\r\n      classFilter: '',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = (prevProps: Readonly<IProps>) => {\r\n    if (this.props.selected !== prevProps.selected) {\r\n      this.changeClassName();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { note, onChange } = this.props;\r\n    subscribeDesktopItemToDragDrop(this.input, note, onChange);\r\n    // todo: why this???\r\n    this.changeClassName();\r\n  }\r\n\r\n  changeClassName = () => {\r\n    if (this.props.selected === 'note') {\r\n      this.setState({ classFilter: 'nofilter' });\r\n    } else if (this.props.selected !== 'home') {\r\n      this.setState({ classFilter: 'filter' });\r\n    } else {\r\n      this.setState({ classFilter: '' });\r\n    }\r\n  };\r\n\r\n  edit = () => {\r\n    this.setState({ editing: true });\r\n  };\r\n\r\n  save = () => {\r\n    this.props.onChange({\r\n      ...this.props.note,\r\n      content: (this.refs.newText as any).value,\r\n    });\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  remove = () => {\r\n    this.props.onRemove(this.props.note.id);\r\n  };\r\n\r\n  handleMouseDown = (e, id) => {\r\n    this.props.handleMouseDown(e, id);\r\n  };\r\n  handleMouseUp = (e, id) => {\r\n    this.props.handleMouseUp(e, id);\r\n  };\r\n\r\n  renderDisplay() {\r\n    const id = this.props.note.id;\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          ref={c => (this.input = c)}\r\n          id={id.toString()}\r\n          className={'note node ' + this.state.classFilter}\r\n          style={this.state.style}\r\n          onMouseDown={e => this.handleMouseDown(e, id)}\r\n          onMouseUp={e => this.handleMouseUp(e, id)}\r\n        >\r\n          <div className=\"prishepka\">\r\n            <img className=\"hook\" alt=\"prishepka\" src=\"prishepka.png\" />\r\n            <div className=\"polosochka\" />\r\n          </div>\r\n          <p>{this.props.note.content}</p>\r\n          <span>\r\n            <button onClick={this.edit} className=\"btn btn-primary\">\r\n              Ред.\r\n            </button>\r\n\r\n            <button onClick={this.remove} className=\"btn btn-danger\">\r\n              Удалить\r\n            </button>\r\n          </span>\r\n        </div>\r\n        <div id={'kostyl_' + id} className=\"kostyl\" style={this.state.style} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderForm() {\r\n    return (\r\n      <>\r\n        <div\r\n          ref=\"myNote\"\r\n          className={'note node ' + this.state.classFilter}\r\n          id={this.props.note.id.toString()}\r\n          style={this.state.style}\r\n        >\r\n          <textarea\r\n            ref=\"newText\"\r\n            defaultValue={this.props.note.content}\r\n            className=\"form-control\"\r\n            maxLength={110}\r\n            rows={10}\r\n          />\r\n          <button className=\"btn success\" onClick={this.save}>\r\n            Сохранить\r\n          </button>\r\n        </div>\r\n        <div id={'kostyl_' + this.props.note.id} className=\"kostyl\" style={this.state.style} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.editing) {\r\n      return this.renderForm();\r\n    } else {\r\n      return this.renderDisplay();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport 'jquery-ui-dist/jquery-ui';\r\nimport './CSS/Board.css';\r\nimport './CSS/Book.css';\r\nimport { FileEntity } from './entities';\r\nimport { subscribeDesktopItemToDragDrop } from './helpers';\r\n\r\ninterface IProps {\r\n  selected: string;\r\n  file: FileEntity;\r\n  onChange: (file: FileEntity) => void;\r\n  onRemove: (fileId) => void;\r\n  handleMouseDown: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, id: number) => void;\r\n  handleMouseUp: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, id: number) => void;\r\n}\r\n\r\ninterface IState {\r\n  style: { top: string; left: string };\r\n  classFilter: string;\r\n  classFilterOblozhka: string;\r\n  classFilterBook: string;\r\n}\r\n\r\nclass File extends React.Component<IProps, IState> {\r\n  private input: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { offsetLeft, offsetTop } = this.props.file;\r\n\r\n    this.state = {\r\n      style: {\r\n        left: offsetLeft + 'px',\r\n        top: offsetTop + 'px',\r\n      },\r\n      classFilter: '',\r\n      classFilterOblozhka: '',\r\n      classFilterBook: '',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = (prevProps: Readonly<IProps>) => {\r\n    if (this.props.selected !== prevProps.selected) {\r\n      this.changeClassName();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { file, onChange } = this.props;\r\n    subscribeDesktopItemToDragDrop(this.input, file, onChange);\r\n    this.changeClassName();\r\n  }\r\n\r\n  changeClassName = () => {\r\n    if (this.props.selected === 'book') {\r\n      this.setState({ classFilter: '' });\r\n      this.setState({ classFilterOblozhka: 'oblozhka_back' });\r\n      this.setState({ classFilterBook: 'book_front' });\r\n    } else if (this.props.selected !== 'home') {\r\n      this.setState({ classFilter: 'filter' });\r\n      this.setState({ classFilterOblozhka: '' });\r\n      this.setState({ classFilterBook: '' });\r\n    } else {\r\n      this.setState({ classFilter: '' });\r\n      this.setState({ classFilterOblozhka: '' });\r\n      this.setState({ classFilterBook: '' });\r\n    }\r\n  };\r\n\r\n  randomBetween = (min, max) => {\r\n    return min + Math.ceil(Math.random() * max);\r\n  };\r\n\r\n  remove = () => {\r\n    this.props.onRemove(this.props.file.id);\r\n  };\r\n\r\n  handleMouseDown = (e, id) => {\r\n    this.props.handleMouseDown(e, id);\r\n  };\r\n  handleMouseUp = (e, id) => {\r\n    this.props.handleMouseUp(e, id);\r\n  };\r\n\r\n  render() {\r\n    const { id, fileName } = this.props.file;\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className={'whole_book node ' + this.state.classFilter}\r\n          id={id.toString()}\r\n          ref={c => (this.input = c)}\r\n          style={this.state.style}\r\n          onMouseDown={e => this.handleMouseDown(e, id)}\r\n          onMouseUp={e => this.handleMouseUp(e, id)}\r\n        >\r\n          <div className={this.state.classFilterOblozhka + ' oblozhka'}>\r\n            <div className=\"pages\">\r\n              <div className=\"bookmark\">\r\n                <img alt=\"\" src=\"bookmark.png\" />\r\n              </div>\r\n            </div>\r\n            <div className={this.state.classFilterBook + ' book'}>\r\n              <p>{fileName}</p>\r\n              <span>\r\n                <button onClick={this.remove} className=\"btn btn-danger glyphicon glyphicon-trash\">\r\n                  X\r\n                </button>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id={'kostyl_' + id} className=\"kostyl\" style={this.state.style} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default File;\r\n","import React from 'react';\r\nimport 'jquery-ui-dist/jquery-ui';\r\nimport './CSS/Quote.css';\r\nimport './CSS/Board.css';\r\nimport { QuoteEntity } from './entities';\r\nimport { subscribeDesktopItemToDragDrop } from './helpers';\r\n\r\ninterface IProps {\r\n  quote: QuoteEntity;\r\n  onChange: (quote: QuoteEntity) => void;\r\n  onRemove: (quoteId) => void;\r\n  handleMouseDown: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, id: number) => void;\r\n  handleMouseUp: (event: React.MouseEvent<HTMLDivElement, MouseEvent>, id: number) => void;\r\n  selected: string;\r\n}\r\n\r\ninterface IState {\r\n  editing: boolean;\r\n  style: any;\r\n  classFilter: string;\r\n}\r\n\r\nclass Quote extends React.Component<IProps, IState> {\r\n  private input: any;\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editing: false,\r\n      style: {\r\n        left: this.props.quote.offsetLeft + 'px',\r\n        top: this.props.quote.offsetTop + 'px',\r\n      },\r\n      classFilter: '',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = (prevProps: Readonly<IProps>) => {\r\n    if (this.props.selected !== prevProps.selected) {\r\n      this.changeClassName();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { quote, onChange } = this.props;\r\n    subscribeDesktopItemToDragDrop(this.input, quote, onChange);\r\n    this.changeClassName();\r\n  }\r\n\r\n  changeClassName = () => {\r\n    if (this.props.selected === 'quote') {\r\n      this.setState({ classFilter: 'nofilter' });\r\n    } else if (this.props.selected !== 'home') {\r\n      this.setState({ classFilter: 'filter' });\r\n    } else {\r\n      this.setState({ classFilter: '' });\r\n    }\r\n  };\r\n\r\n  edit = () => {\r\n    this.setState({ editing: true });\r\n  };\r\n\r\n  save = () => {\r\n    this.props.onChange({\r\n      ...this.props.quote,\r\n      content: (this.refs.newQuoteText as any).value,\r\n    });\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  remove = () => {\r\n    this.props.onRemove(this.props.quote.id);\r\n  };\r\n\r\n  handleMouseDown = (e, idName) => {\r\n    this.props.handleMouseDown(e, idName);\r\n  };\r\n  handleMouseUp = (e, idName) => {\r\n    this.props.handleMouseUp(e, idName);\r\n  };\r\n\r\n  renderDisplay() {\r\n    const { id, content } = this.props.quote;\r\n    return (\r\n      <>\r\n        <div\r\n          ref={c => (this.input = c)}\r\n          className={'quote node ' + this.state.classFilter}\r\n          id={id.toString()}\r\n          style={this.state.style}\r\n          onMouseDown={e => this.handleMouseDown(e, id)}\r\n          onMouseUp={e => this.handleMouseUp(e, id)}\r\n        >\r\n          <p>{content}</p>\r\n          <span>\r\n            <button onClick={this.edit} className=\"btn btn-primary\">\r\n              Ред.\r\n            </button>\r\n\r\n            <button onClick={this.remove} className=\"btn btn-danger\">\r\n              Удалить\r\n            </button>\r\n          </span>\r\n        </div>\r\n        <div id={'kostyl_' + id} className=\"kostyl\" style={this.state.style} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderForm() {\r\n    const { id, content } = this.props.quote;\r\n    return (\r\n      <>\r\n        <div\r\n          ref=\"myQuote\"\r\n          className={'quote node ' + this.state.classFilter}\r\n          id={id.toString()}\r\n          style={this.state.style}\r\n        >\r\n          <textarea\r\n            ref=\"newQuoteText\"\r\n            defaultValue={content}\r\n            className=\"form-control\"\r\n            maxLength={110}\r\n            rows={10}\r\n          />\r\n          <button className=\"btn success\" onClick={this.save}>\r\n            Сохранить\r\n          </button>\r\n        </div>\r\n        <div id={'kostyl_' + id} className=\"kostyl\" style={this.state.style} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.editing) {\r\n      return this.renderForm();\r\n    } else {\r\n      return this.renderDisplay();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Quote;\r\n","import React from 'react';\r\nimport { NativeTypes } from 'react-dnd-html5-backend';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport './CSS/DesktopPage.css';\r\n\r\ninterface IProps {\r\n  onDrop: (props: IProps, monitor: any) => void;\r\n}\r\n\r\n// TODO: WTF!?\r\nlet r = 'dropZone1';\r\n\r\nconst TargetBox = (props: IProps) => {\r\n  const { onDrop } = props;\r\n  const [{ canDrop, isOver }, drop] = useDrop({\r\n    accept: [NativeTypes.FILE],\r\n    drop(item, monitor) {\r\n      if (onDrop) {\r\n        // TODO: WTF!?\r\n        onDrop(props, monitor);\r\n      }\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  });\r\n\r\n  const isActive = canDrop && isOver;\r\n  r = isActive ? 'dropZone1' : 'dropZone2';\r\n\r\n  return (\r\n    <div ref={drop} style={{ width: '100%', height: '100%' }}>\r\n      <div className={r}>\r\n        <p className=\"dropText\">Drop file here</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TargetBox;\r\n","import React from 'react';\r\nimport './CSS/Arrow.css';\r\nimport 'jquery-ui-dist/jquery-ui';\r\nimport { LivePosition, RelationEntity } from './entities';\r\n\r\ninterface IState {\r\n  style: any;\r\n  points: number[];\r\n}\r\n\r\ninterface IProps {\r\n  relation?: RelationEntity;\r\n  livePosition?: LivePosition;\r\n  selected: string;\r\n  onRemove?: (relationId: number) => void;\r\n}\r\n\r\nclass Arrow extends React.Component<IProps, IState> {\r\n  points: number[];\r\n  zIndex: string = '1';\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      style: {\r\n        left: '0px',\r\n        top: '0px',\r\n        width: '0px',\r\n        transform: 'rotate(0deg)',\r\n        transformOrigin: '0 0',\r\n        zIndex: '1',\r\n        opacity: '1',\r\n      },\r\n      points: [],\r\n    };\r\n  }\r\n\r\n  calcStartCoordinates(idName) {\r\n    const elem = document.getElementById(idName);\r\n    const box = elem.getBoundingClientRect();\r\n\r\n    const x = box.left + window.pageXOffset + box.width / 2;\r\n    const y = box.top + window.pageYOffset + box.height / 2;\r\n\r\n    this.points.splice(0, 2, x, y);\r\n  }\r\n\r\n  calcEndCoordinates = idName => {\r\n    const elem = document.getElementById(idName);\r\n    const box = elem.getBoundingClientRect();\r\n\r\n    const x = box.left + window.pageXOffset + box.width / 2;\r\n    const y = box.top + window.pageYOffset + box.height / 2;\r\n\r\n    this.points.splice(2, 2, x, y);\r\n  };\r\n\r\n  updateStyle = (n?: number) => {\r\n    const dx = this.points[2] - this.points[0];\r\n    const dy = this.points[3] - this.points[1];\r\n    const length = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    const style = { ...this.state.style };\r\n    if (this.props.selected !== 'home') {\r\n      style.opacity = '0.5';\r\n    } else {\r\n      style.opacity = '1';\r\n    }\r\n    //для componentDidMount\r\n    if (n) {\r\n      style.left = this.points[0] + 'px';\r\n      style.top = this.points[1] + 'px';\r\n    }\r\n    style.zIndex = this.zIndex;\r\n    style.transform = 'rotate(' + (Math.atan2(dy, dx) * 180) / Math.PI + 'deg)';\r\n    style.width = length + 'px';\r\n    this.setState({ style });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.calcPoints();\r\n\r\n    this.setState({ points: [...this.points] });\r\n    this.updateStyle(1);\r\n  }\r\n\r\n  componentDidUpdate = (prevProps: Readonly<IProps>, prevState: Readonly<IState>) => {\r\n    this.calcPoints();\r\n\r\n    const oldPoints = prevState.points;\r\n    const newPoints = this.points;\r\n\r\n    if (\r\n      oldPoints.length !== newPoints.length ||\r\n      oldPoints.some((val, index) => val !== newPoints[index])\r\n    ) {\r\n      this.setState({ points: [...this.points] });\r\n      this.updateStyle(1);\r\n    }\r\n  };\r\n\r\n  private calcPoints() {\r\n    this.points = [0, 0, 0, 0];\r\n    if (this.props.relation) {\r\n      const { firstMemberId, secondaryMemberId } = this.props.relation;\r\n      this.calcStartCoordinates(firstMemberId);\r\n      this.calcEndCoordinates(secondaryMemberId);\r\n    }\r\n\r\n    const livePosition = this.props.livePosition;\r\n    if (livePosition) {\r\n      this.calcStartCoordinates(livePosition.fromItemId);\r\n      this.points = [\r\n        this.points[0],\r\n        this.points[1],\r\n        livePosition.toPoint.x,\r\n        livePosition.toPoint.y,\r\n      ];\r\n    }\r\n  }\r\n\r\n  remove = () => {\r\n    this.props.onRemove(this.props.relation.id);\r\n  };\r\n\r\n  addDelBut = e => {\r\n    if (!this.props.relation) {\r\n      return;\r\n    }\r\n\r\n    const link = document.getElementById(this.props.relation.id.toString());\r\n    const span = link.getElementsByTagName('span');\r\n    span[0].style.display = 'block';\r\n  };\r\n\r\n  hideDelBut = e => {\r\n    if (!this.props.relation) {\r\n      return;\r\n    }\r\n\r\n    const link = document.getElementById(this.props.relation.id.toString());\r\n    const span = link.getElementsByTagName('span');\r\n    span[0].style.display = 'none';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"link\"\r\n        id={this.props.relation ? this.props.relation.id.toString() : 'live-relation'}\r\n        style={this.state.style}\r\n        onMouseEnter={this.addDelBut}\r\n        onMouseLeave={this.hideDelBut}\r\n      >\r\n        <span>\r\n          <button onClick={this.remove} className=\"btn btn-danger\">\r\n            X\r\n          </button>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Arrow;\r\n","import * as React from 'react';\r\n\r\nconst cx = require('classnames/bind').bind(require('./style.scss'));\r\n\r\ninterface IProps {\r\n  className?: string;\r\n}\r\n\r\nconst Loader = () => (\r\n  <div className={cx('loader')}>\r\n    <div className={cx('loader__inner')}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import * as React from 'react';\r\n\r\nconst cx = require('classnames/bind').bind(require('./style.scss'));\r\n\r\nenum Size {\r\n  H1 = 'h1',\r\n  H2 = 'h2',\r\n  H3 = 'h3',\r\n}\r\n\r\nenum Weight {\r\n  NORMAL = 'normal',\r\n  SEMIBOLD = 'semibold',\r\n  BOLD = 'bold',\r\n}\r\n\r\ninterface IProps {\r\n  size?: Size;\r\n  weight?: Weight;\r\n  children: string | React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nclass Title extends React.PureComponent<IProps> {\r\n  static SIZE = Size;\r\n  static WEIGHT = Weight;\r\n\r\n  public static defaultProps: Pick<IProps, 'size'> = {\r\n    size: Title.SIZE.H1,\r\n  };\r\n\r\n  render() {\r\n    const { size, weight, children, className } = this.props;\r\n    const Tag = size;\r\n\r\n    return (\r\n      <Tag\r\n        className={cx(className, {\r\n          title: true,\r\n          [`title_size_${size}`]: size,\r\n          [`title_weight_${weight}`]: weight,\r\n        })}\r\n      >\r\n        {children}\r\n      </Tag>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\nimport Note from './Note';\r\nimport File from './File';\r\nimport Quote from './Quote';\r\nimport './CSS/Board.css';\r\nimport TargetBox from './TargetBox';\r\nimport Arrow from './Arrow';\r\nimport $ from 'jquery';\r\nimport {\r\n  DesktopEntity,\r\n  FileEntity,\r\n  LivePosition,\r\n  NoteEntity,\r\n  QuoteEntity,\r\n  RelationEntity,\r\n} from './entities';\r\nimport { calcMaxId, generateRandomOffsetForDesktopItem, isRelationHasItem } from './helpers';\r\nimport { IDesktopsManager } from './core/DesktopsManager';\r\nimport { connect } from 'react-redux';\r\nimport { IRootState } from './redux';\r\nimport Loader from './components/Loader';\r\n\r\ninterface IState {\r\n  selected: string; // todo: enum\r\n  filesArray: FileEntity[];\r\n  quotesArray: QuoteEntity[];\r\n  notesArray: NoteEntity[];\r\n  relationsArray: RelationEntity[];\r\n  relationLivePosition: LivePosition;\r\n  isLoading: boolean;\r\n}\r\n\r\ninterface IProps {\r\n  id: number;\r\n  ref: string;\r\n  filter: string;\r\n  previewMode?: boolean;\r\n}\r\n\r\ninterface IStateToProps {\r\n  desktopsManager: IDesktopsManager;\r\n}\r\n\r\n// TODO: too LARGE component. Need to refactor this\r\nclass Board extends Component<IProps & IStateToProps, IState> {\r\n  /**\r\n   * @important For correct system working this id must be used across all desktop items\r\n   * entities and be UNIQ for all elements! Otherwise, we will have difficult to occur\r\n   * problems. Please keep this in mind.\r\n   */\r\n  private uniqueId: number = 1000;\r\n  private desktopEntity: DesktopEntity;\r\n  private saveIntervalId;\r\n  private isSaving = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filesArray: [],\r\n      selected: this.props.filter,\r\n      relationsArray: [],\r\n      quotesArray: [],\r\n      notesArray: [],\r\n      relationLivePosition: null,\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    $(document).keydown(this.handler);\r\n    $(document).keyup(this.handler);\r\n\r\n    this.props.desktopsManager && this.fetchDesktop();\r\n    if (!this.props.previewMode) {\r\n      this.saveIntervalId = setInterval(() => this.save(null, true), 1000 * 30);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.saveIntervalId && clearInterval(this.saveIntervalId);\r\n  }\r\n\r\n  private fetchDesktop() {\r\n    this.setState({ isLoading: true });\r\n    this.props.desktopsManager.getDesktop(this.props.id).then((desktopEntity: DesktopEntity) => {\r\n      this.desktopEntity = desktopEntity;\r\n      const { relationList, fileList, quoteList, noteList } = desktopEntity;\r\n      this.setState({\r\n        isLoading: false,\r\n        relationsArray: relationList,\r\n        filesArray: fileList,\r\n        quotesArray: quoteList,\r\n        notesArray: noteList,\r\n      });\r\n      this.uniqueId = calcMaxId(...relationList, ...fileList, ...quoteList, ...noteList) + 1;\r\n    });\r\n  }\r\n\r\n  handler = e => {\r\n    if (e.shiftKey) {\r\n      $('.node').draggable({\r\n        disabled: true,\r\n      });\r\n    } else {\r\n      $('.node').draggable({\r\n        disabled: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  save = (callbackFn?, inBackground?: boolean) => {\r\n    if (this.state.isLoading || this.isSaving) {\r\n      return;\r\n    }\r\n\r\n    this.isSaving = true;\r\n    !inBackground && this.setState({ isLoading: true });\r\n\r\n    const { relationsArray, filesArray, quotesArray, notesArray } = this.state;\r\n    const newDesktopEntity: DesktopEntity = {\r\n      ...this.desktopEntity,\r\n      relationList: relationsArray,\r\n      fileList: filesArray,\r\n      quoteList: quotesArray,\r\n      noteList: notesArray,\r\n    };\r\n\r\n    this.props.desktopsManager.saveDesktop(newDesktopEntity).then(() => {\r\n      this.isSaving = false;\r\n      !inBackground && this.setState({ isLoading: false });\r\n      callbackFn && callbackFn();\r\n    });\r\n  };\r\n\r\n  componentDidUpdate = (prevProps: Readonly<IProps & IStateToProps>) => {\r\n    if (this.props.filter !== prevProps.filter) {\r\n      this.setState({ selected: this.props.filter });\r\n    }\r\n\r\n    if (!prevProps.desktopsManager && this.props.desktopsManager) {\r\n      this.fetchDesktop();\r\n    }\r\n  };\r\n\r\n  handleFileDrop = (items, monitor) => {\r\n    const arr = this.state.filesArray;\r\n    const files = monitor ? monitor.getItem().files : items;\r\n    if (!files || !files.length) {\r\n      return;\r\n    }\r\n\r\n    // todo: works only with single file!!!\r\n    const fileName = files[0].name as string;\r\n    if (!fileName.endsWith('.pdf') && !fileName.endsWith('.djvu')) {\r\n      alert('Недопустимый тип файла');\r\n      return;\r\n    }\r\n\r\n    // todo: hardcoded in styles, used only to correct offset\r\n    const width = 143;\r\n    const height = 193;\r\n\r\n    for (const i of Object.keys(files)) {\r\n      arr.push({\r\n        id: this.nextId(),\r\n        fileName: files[i].name,\r\n        width: 143,\r\n        height: 193,\r\n        externalFileId: 'fileId',\r\n        ...generateRandomOffsetForDesktopItem(width, height),\r\n      });\r\n    }\r\n\r\n    this.setState({ filesArray: arr });\r\n  };\r\n\r\n  nextId = () => {\r\n    this.uniqueId = this.uniqueId || 0;\r\n    return this.uniqueId++;\r\n  };\r\n\r\n  // todo: Code duplications, it can be refactored\r\n  updateNote = (newNote: NoteEntity) => {\r\n    const { id } = newNote;\r\n    const newList = this.state.notesArray.filter((note: NoteEntity) => id !== note.id);\r\n    newList.push(newNote);\r\n    this.setState({ notesArray: newList });\r\n  };\r\n\r\n  updateQuote = (newQuote: QuoteEntity) => {\r\n    const { id } = newQuote;\r\n    const newList = this.state.quotesArray.filter((note: NoteEntity) => id !== note.id);\r\n    newList.push(newQuote);\r\n    this.setState({ quotesArray: newList });\r\n  };\r\n\r\n  updateFile = (newFile: FileEntity) => {\r\n    const { id } = newFile;\r\n    const newList = this.state.filesArray.filter((file: FileEntity) => id !== file.id);\r\n    newList.push(newFile);\r\n\r\n    this.setState({ filesArray: newList });\r\n  };\r\n\r\n  renderEachFile = (file: FileEntity) => {\r\n    return (\r\n      <File\r\n        key={file.id}\r\n        file={file}\r\n        onChange={this.updateFile}\r\n        onRemove={this.removeFile}\r\n        selected={this.state.selected}\r\n        handleMouseDown={this.handleMouseDown}\r\n        handleMouseUp={this.handleMouseUp}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderEachNote = (note: NoteEntity) => {\r\n    return (\r\n      <Note\r\n        selected={this.state.selected}\r\n        key={note.id}\r\n        note={note}\r\n        onChange={this.updateNote}\r\n        onRemove={this.removeNote}\r\n        handleMouseDown={this.handleMouseDown}\r\n        handleMouseUp={this.handleMouseUp}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderEachQuote = (quote: QuoteEntity) => {\r\n    return (\r\n      <Quote\r\n        selected={this.state.selected}\r\n        key={quote.id}\r\n        quote={quote}\r\n        onChange={this.updateQuote}\r\n        onRemove={this.removeQuote}\r\n        handleMouseDown={this.handleMouseDown}\r\n        handleMouseUp={this.handleMouseUp}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderEachRelation = relation => {\r\n    return (\r\n      <Arrow\r\n        key={relation.id}\r\n        relation={relation}\r\n        selected={this.state.selected}\r\n        onRemove={this.removeLink}\r\n      />\r\n    );\r\n  };\r\n\r\n  removeFile = fileId => {\r\n    // todo: remove file from server here\r\n    const newRelations = this.state.relationsArray.filter(\r\n      (relation: RelationEntity) => !isRelationHasItem(relation, fileId),\r\n    );\r\n    const newFiles = this.state.filesArray.filter(({ id }: FileEntity) => id !== fileId);\r\n\r\n    this.setState({\r\n      filesArray: newFiles,\r\n      relationsArray: newRelations,\r\n    });\r\n  };\r\n\r\n  removeNote = noteId => {\r\n    const newRelations = this.state.relationsArray.filter(\r\n      (relation: RelationEntity) => !isRelationHasItem(relation, noteId),\r\n    );\r\n    const newNotes = this.state.notesArray.filter(({ id }: NoteEntity) => id !== noteId);\r\n\r\n    this.setState({\r\n      notesArray: newNotes,\r\n      relationsArray: newRelations,\r\n    });\r\n  };\r\n\r\n  removeQuote = quoteId => {\r\n    const newRelations = this.state.relationsArray.filter(\r\n      (relation: RelationEntity) => !isRelationHasItem(relation, quoteId),\r\n    );\r\n    const newQuotes = this.state.quotesArray.filter(({ id }: NoteEntity) => id !== quoteId);\r\n\r\n    this.setState({\r\n      quotesArray: newQuotes,\r\n      relationsArray: newRelations,\r\n    });\r\n  };\r\n\r\n  removeLink = relationId => {\r\n    this.setState({\r\n      relationsArray: this.state.relationsArray.filter(\r\n        (rel: RelationEntity) => rel.id !== relationId,\r\n      ),\r\n    });\r\n  };\r\n\r\n  addNote = () => {\r\n    const height = 150;\r\n    const width = 150;\r\n\r\n    const noteItem: NoteEntity = {\r\n      id: this.nextId(),\r\n      content: 'New note',\r\n      height,\r\n      width,\r\n      ...generateRandomOffsetForDesktopItem(width, height),\r\n    };\r\n\r\n    this.setState({ notesArray: this.state.notesArray.concat(noteItem) });\r\n  };\r\n\r\n  addQuote = () => {\r\n    const height = 130;\r\n    const width = 220;\r\n\r\n    const quoteItem: QuoteEntity = {\r\n      id: this.nextId(),\r\n      content: 'New quote',\r\n      height,\r\n      width,\r\n      ...generateRandomOffsetForDesktopItem(width, height),\r\n    };\r\n\r\n    this.setState({ quotesArray: this.state.quotesArray.concat(quoteItem) });\r\n  };\r\n\r\n  handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>, id: number) => {\r\n    if (e.shiftKey) {\r\n      this.setState({\r\n        relationLivePosition: {\r\n          fromItemId: id,\r\n          toPoint: {\r\n            x: e.pageX,\r\n            y: e.pageY,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMouseUp = (e, id?) => {\r\n    if (this.state.relationLivePosition) {\r\n      const from = this.state.relationLivePosition.fromItemId;\r\n      this.setState({ relationLivePosition: null });\r\n\r\n      if (from) {\r\n        if (!id || from === id) {\r\n          return;\r\n        }\r\n\r\n        const relation: RelationEntity = {\r\n          id: this.nextId(),\r\n          firstMemberId: from,\r\n          secondaryMemberId: id,\r\n        };\r\n\r\n        this.setState({ relationsArray: this.state.relationsArray.concat(relation) });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (this.state.relationLivePosition) {\r\n      this.setState({\r\n        relationLivePosition: {\r\n          fromItemId: this.state.relationLivePosition.fromItemId,\r\n          toPoint: {\r\n            x: e.pageX,\r\n            y: e.pageY,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.isLoading ? (\r\n      this.props.previewMode ? null : (\r\n        <Loader />\r\n      )\r\n    ) : (\r\n      <div\r\n        className=\"board\"\r\n        onMouseMove={this.handleMouseMove}\r\n        onMouseUp={e => this.handleMouseUp(e)}\r\n      >\r\n        {this.state.notesArray.map(this.renderEachNote)}\r\n        {this.state.filesArray.map(this.renderEachFile)}\r\n        {this.state.quotesArray.map(this.renderEachQuote)}\r\n        {!this.props.previewMode && this.state.relationsArray.map(this.renderEachRelation)}\r\n        {this.state.relationLivePosition && (\r\n          <Arrow livePosition={this.state.relationLivePosition} selected={this.state.selected} />\r\n        )}\r\n        {!this.props.previewMode && <TargetBox onDrop={this.handleFileDrop} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect<IStateToProps>(\r\n  (state: IRootState) => ({\r\n    desktopsManager: state.desktopsManager,\r\n  }),\r\n  null,\r\n  null,\r\n  { forwardRef: true },\r\n)(Board);\r\n","import React from 'react';\r\nimport 'jquery-ui-dist/jquery-ui';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport './CSS/Desktop.css';\r\nimport Board from './Board';\r\n\r\ninterface IProps {\r\n  children: string;\r\n  id: number;\r\n  index: number;\r\n  onChange: (value: any, index: number) => void;\r\n  onRemove: (index: number) => void;\r\n  onNavigateDesktop: (id) => void;\r\n}\r\n\r\ninterface IState {\r\n  editing: boolean;\r\n  scale: number;\r\n}\r\n\r\nclass Desktop extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editing: false,\r\n      scale: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.calculatePreviewScale);\r\n    this.calculatePreviewScale();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.calculatePreviewScale);\r\n  }\r\n\r\n  remove = () => {\r\n    this.props.onRemove(this.props.index);\r\n  };\r\n\r\n  edit = () => {\r\n    this.setState({ editing: true });\r\n  };\r\n\r\n  saveName = () => {\r\n    this.props.onChange((this.refs.newName as any).value, this.props.index);\r\n    this.setState({ editing: false });\r\n  };\r\n\r\n  calculatePreviewScale = () => {\r\n    const previewHeight = 220;\r\n    const previewWidth = 370;\r\n    const windowHeight = window.innerHeight;\r\n    const windowWidth = window.innerWidth;\r\n\r\n    const maxCoeff = Math.max(\r\n      (15 * previewWidth) / windowWidth,\r\n      (15 * previewHeight) / windowHeight,\r\n    );\r\n    this.setState({ scale: Math.min(1 / maxCoeff, 0.2) });\r\n  };\r\n\r\n  renderForm = () => {\r\n    return (\r\n      <div className=\"NewDesk\">\r\n        <div className=\"desktopHead\">\r\n          <input\r\n            ref=\"newName\"\r\n            type=\"text\"\r\n            defaultValue={this.props.children}\r\n            size={30}\r\n            autoFocus\r\n          ></input>\r\n          <button onClick={this.saveName} className=\"btn-save\">\r\n            <img alt=\"\" src=\"save.png\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"newDesk\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderDisplay = () => {\r\n    return (\r\n      <div className=\"NewDesk\">\r\n        <div className=\"desktopHead\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              <div className=\"dots\" />\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => this.props.onNavigateDesktop(this.props.id)}>\r\n                Открыть\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={this.edit}>Переименовать</Dropdown.Item>\r\n              <Dropdown.Item onClick={this.remove}>Удалить</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <div className=\"desktopName\">{this.props.children}</div>\r\n        </div>\r\n\r\n        <div className=\"preview-wrapper\" />\r\n        <div\r\n          className=\"deskContent\"\r\n          style={{ transform: `scale(${this.state.scale})`, height: 0, width: 0 }}\r\n        >\r\n          <Board id={this.props.id} ref={null} filter={''} previewMode={true} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.editing) {\r\n      return this.renderForm();\r\n    } else {\r\n      return this.renderDisplay();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Desktop;\r\n","import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport SideNav, { NavItem, NavText } from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\n\r\nimport Desktop from './Desktop';\r\n\r\nimport './CSS/NavBar.css';\r\nimport './CSS/Desktop.css';\r\nimport { IRootState } from './redux';\r\nimport { saveApp } from './redux/modules/app/actions';\r\nimport { AuthenticationManagerSingleton } from './core/AuthenticationManager';\r\nimport Loader from './components/Loader';\r\nimport { AppEntity, DesktopEntity } from './entities';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nconst get = require('lodash/get');\r\n\r\ninterface IStateToProps {\r\n  app: IRootState['app'];\r\n}\r\n\r\ninterface IDispatchToProps {\r\n  saveApp: typeof saveApp;\r\n}\r\n\r\ninterface IState {\r\n  selected: string;\r\n  expanded: boolean;\r\n  desktops: DesktopEntity[];\r\n  filterDesktops: any[];\r\n  name: {\r\n    firstName: string;\r\n    lastName: string;\r\n  };\r\n}\r\n\r\nclass MainPage extends Component<IStateToProps & IDispatchToProps & RouteComponentProps, IState> {\r\n  // TODO: Get actual from API\r\n  private uniqueId: number = 1;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const authenticatedManager = AuthenticationManagerSingleton.getInstance();\r\n    const userData = authenticatedManager.getUserData();\r\n\r\n    this.state = {\r\n      selected: 'home',\r\n      expanded: true,\r\n      desktops: get(this.props.app.data, 'appEntity.desktopList', []),\r\n      filterDesktops: [],\r\n      name: {\r\n        firstName: userData.firstName,\r\n        lastName: userData.lastName,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ desktops: get(this.props.app.data, 'appEntity.desktopList', []) });\r\n    this.setState(state => ({ filterDesktops: state.desktops }));\r\n  }\r\n\r\n  componentDidUpdate(\r\n    prevProps: Readonly<IStateToProps & IDispatchToProps>,\r\n    prevState: Readonly<IState>,\r\n  ) {\r\n    if (\r\n      this.props.app.data !== null &&\r\n      get(prevProps.app.data, 'hash') !== this.props.app.data.hash\r\n    ) {\r\n      this.setState({ desktops: get(this.props.app.data, 'appEntity.desktopList', []) });\r\n      this.setState(state => ({ filterDesktops: state.desktops }));\r\n    }\r\n    if (this.props.app.isLoaded && !this.props.app.isLoading) {\r\n      const ids = this.state.desktops.map(desktop => desktop.id);\r\n      this.uniqueId = ids.length > 0 ? Math.max.apply(null, ids) + 1 : 1;\r\n    }\r\n  }\r\n\r\n  nextId() {\r\n    return this.uniqueId++;\r\n  }\r\n\r\n  saveApp = (appEntity: AppEntity) => this.props.saveApp({ desktopList: this.state.desktops });\r\n\r\n  addDesktop = text => {\r\n    const arr = this.state.desktops;\r\n\r\n    arr.push({\r\n      id: this.nextId(),\r\n      name: text,\r\n      noteList: [],\r\n      quoteList: [],\r\n      fileList: [],\r\n      relationList: [],\r\n      externalId: null,\r\n    });\r\n\r\n    this.saveApp({ desktopList: arr }).then(() => this.setState({ desktops: arr }));\r\n  };\r\n\r\n  editDesktop = (newName, i) => {\r\n    const arr = this.state.desktops;\r\n    arr[i].name = newName;\r\n\r\n    this.saveApp({ desktopList: arr }).then(() => this.setState({ desktops: arr }));\r\n  };\r\n\r\n  removeDesktop = index => {\r\n    const arr = this.state.desktops;\r\n    const elm = arr[index];\r\n\r\n    arr.splice(index, 1);\r\n\r\n    this.saveApp({ desktopList: arr }).then(() => this.setState({ desktops: arr }));\r\n\r\n    return elm;\r\n  };\r\n\r\n  renderEachDesktop = (element, i) => {\r\n    return (\r\n      <Desktop\r\n        key={element.id}\r\n        id={element.id}\r\n        index={i}\r\n        onNavigateDesktop={id => this.props.history.push(`/desktop?id=${id}`)}\r\n        onChange={this.editDesktop}\r\n        onRemove={this.removeDesktop}\r\n      >\r\n        {element.name}\r\n      </Desktop>\r\n    );\r\n  };\r\n\r\n  onSelect = selected => {\r\n    this.setState({ selected });\r\n  };\r\n\r\n  filterList = event => {\r\n    const arr = this.state.desktops;\r\n    const newArr = arr.filter(\r\n      items => items.name.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1,\r\n    );\r\n    this.setState({ filterDesktops: newArr });\r\n  };\r\n  notSubmit = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  logout = () => {\r\n    AuthenticationManagerSingleton.getInstance()\r\n      .logout()\r\n      .then(() => window.location.reload());\r\n  };\r\n\r\n  render() {\r\n    const { expanded, selected } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"header\">\r\n          <Navbar fixed=\"top\" className=\"navBar\">\r\n            <Nav className=\"mr-auto\">\r\n              <Navbar.Text>\r\n                <p className=\"circle\">\r\n                  {this.state.name.firstName ? this.state.name.firstName.substr(0, 1) : ''}\r\n                </p>\r\n              </Navbar.Text>\r\n              <Navbar.Text>\r\n                <div className=\"name\">\r\n                  {this.state.name.firstName} {this.state.name.lastName}\r\n                </div>\r\n              </Navbar.Text>\r\n            </Nav>\r\n            <Form inline>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon1\">\r\n                    <img alt=\"\" src=\"za_lupa.png\" />\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Поиск\"\r\n                  className=\"mr-sm-2\"\r\n                  onChange={this.filterList}\r\n                />\r\n              </InputGroup>\r\n            </Form>\r\n          </Navbar>\r\n        </div>\r\n\r\n        <div className=\"sideBar\">\r\n          <SideNav onSelect={this.onSelect} defaultExpanded={expanded}>\r\n            <SideNav.Nav selected={selected}>\r\n              <NavItem onClick={this.logout} eventKey=\"sign_out\">\r\n                <NavText style={{ paddingLeft: 32 }} title=\"SignOut\">\r\n                  <>Выйти</>\r\n                </NavText>\r\n              </NavItem>\r\n            </SideNav.Nav>\r\n          </SideNav>\r\n        </div>\r\n\r\n        <div className=\"desktop\">\r\n          {this.props.app.isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              {this.state.filterDesktops.map(this.renderEachDesktop)}\r\n              <div className=\"addNewDesk\">\r\n                <div className=\"desktopHead\">\r\n                  <div className=\"desktopName\">Новый</div>\r\n                </div>\r\n                <div className=\"deskContent\">\r\n                  <button onClick={() => this.addDesktop('Безымянный')} className=\"addButton\">\r\n                    <img alt=\"\" src=\"addBut.png\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect<IStateToProps, IDispatchToProps>(\r\n  (state: IRootState) => ({\r\n    app: state.app,\r\n  }),\r\n  {\r\n    saveApp,\r\n  },\r\n)(MainPage);\r\n","import { IDesktopsManager } from '../../../../core/DesktopsManager';\r\nimport { IRootState } from '../../../index';\r\nimport { AppEntity } from '../../../../entities';\r\n\r\nexport const SAVE_APP_REQUEST = 'SAVE_APP_REQUEST';\r\nexport const SAVE_APP_SUCCESS = 'SAVE_APP_SUCCESS';\r\nexport const SAVE_APP_FAILURE = 'SAVE_APP_FAILURE';\r\n\r\nexport const saveApp = (appEntity: AppEntity): any => {\r\n  return (dispatch, getState) => {\r\n    return dispatch({\r\n      promise: (): Promise<string> => {\r\n        dispatch({ type: SAVE_APP_REQUEST });\r\n\r\n        const state: IRootState = getState();\r\n\r\n        const desktopsManager: IDesktopsManager = state.desktopsManager;\r\n\r\n        // TODO: Следует ли возвращать и appEntity?\r\n        // TODO: state.app.data === null\r\n        return desktopsManager.saveAppEntity(appEntity, state.app.data.hash);\r\n      },\r\n    })\r\n      .then((response: string) => {\r\n        dispatch({ type: SAVE_APP_SUCCESS, payload: response });\r\n        return response;\r\n      })\r\n      .catch((errors: any) => {\r\n        dispatch({ type: SAVE_APP_FAILURE, payload: errors });\r\n        throw errors;\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport SideNav, { NavIcon, NavItem, NavText } from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\n\r\nimport './CSS/Sidebar.css';\r\n\r\ninterface IState {\r\n  selected: string;\r\n}\r\n\r\nclass Sidebar extends React.Component<any, IState> {\r\n  state = {\r\n    selected: 'home',\r\n  };\r\n\r\n  onSelect = selected => {\r\n    this.setState({ selected });\r\n    this.props.filterObjects(selected);\r\n  };\r\n\r\n  render() {\r\n    const { selected } = this.state;\r\n\r\n    return (\r\n      <div className=\"sideBar\">\r\n        <SideNav onSelect={this.onSelect}>\r\n          <SideNav.Nav selected={selected}>\r\n            <NavItem eventKey=\"home\">\r\n              <NavText>\r\n                <>Сбросить</>\r\n              </NavText>\r\n            </NavItem>\r\n            <NavItem eventKey=\"note\">\r\n              <NavIcon>\r\n                <img alt=\"\" src=\"note_bl.png\" />\r\n              </NavIcon>\r\n            </NavItem>\r\n\r\n            <NavItem eventKey=\"book\">\r\n              <NavIcon>\r\n                <img alt=\"\" src=\"book_bl.png\" />\r\n              </NavIcon>\r\n            </NavItem>\r\n\r\n            <NavItem eventKey=\"quote\">\r\n              <NavIcon>\r\n                <img alt=\"\" src=\"quote_bl.png\" />\r\n              </NavIcon>\r\n            </NavItem>\r\n          </SideNav.Nav>\r\n        </SideNav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport $ from 'jquery';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport Board from './Board';\r\nimport Sidebar from './Sidebar';\r\n\r\nimport './CSS/DesktopPage.css';\r\nimport './CSS/Board.css';\r\nimport './CSS/NavBar.css';\r\nimport './CSS/Sidebar.css';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\ninterface IState {\r\n  selected: string;\r\n  id: number;\r\n}\r\n\r\nclass DesktopPage extends React.Component<RouteComponentProps, IState> {\r\n  private fileUpload: HTMLInputElement;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const search = this.props.location.search;\r\n    const params = new URLSearchParams(search);\r\n\r\n    this.state = {\r\n      selected: 'home',\r\n      id: Number.parseInt(params.get('id')),\r\n    };\r\n  }\r\n\r\n  filterObjects = value => {\r\n    this.setState({ selected: value });\r\n  };\r\n\r\n  onClickBack = () => (this.refs.child as any).save(() => this.props.history.push('/'));\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"xx\">\r\n        <div className=\"header\">\r\n          <Navbar fixed=\"top\" className=\"navBar\">\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link onClick={this.onClickBack}>Назад</Nav.Link>\r\n                <Nav.Link onClick={() => (this.refs.child as any).addNote('New Note!')}>\r\n                  <img alt=\"\" src=\"note.png\" title=\"Добавить заметку\" />\r\n                </Nav.Link>\r\n                <Nav.Link onClick={() => $('#fileLoader').click()}>\r\n                  <img alt=\"\" src=\"upload.png\" title=\"Добавить книгу\" />\r\n                </Nav.Link>\r\n                <Nav.Link onClick={() => (this.refs.child as any).addQuote('New Quote!')}>\r\n                  <img alt=\"\" src=\"quote.png\" title=\"Добавить цитату\" />\r\n                </Nav.Link>\r\n                <Nav.Link onClick={() => (this.refs.child as any).save()}>Сохранить</Nav.Link>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"fileLoader\"\r\n                  ref={ref => (this.fileUpload = ref)}\r\n                  accept=\".pdf,.djvu\"\r\n                  onChange={() => (this.refs.child as any).handleFileDrop(this.fileUpload.files)}\r\n                  style={{ display: 'none' }}\r\n                />\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n\r\n        <Sidebar filterObjects={this.filterObjects} />\r\n\r\n        <DndProvider backend={HTML5Backend}>\r\n          <Board id={this.state.id} ref=\"child\" filter={this.state.selected} />\r\n        </DndProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DesktopPage;\r\n","import * as React from 'react';\r\n\r\nconst cx = require('classnames/bind').bind(require('./style.scss'));\r\n\r\ninterface IProps {\r\n  id?: string;\r\n  className?: string;\r\n  isSubmit?: boolean;\r\n  isDisabled?: boolean;\r\n  isLoading?: boolean;\r\n  onClick?: (event: React.SyntheticEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nclass Button extends React.PureComponent<IProps> {\r\n  onClick = (event?: React.SyntheticEvent<HTMLButtonElement>) =>\r\n    this.props.onClick && this.props.onClick(event);\r\n\r\n  render() {\r\n    const { children, id, className, isSubmit, isDisabled, isLoading } = this.props;\r\n\r\n    return (\r\n      <button\r\n        id={id}\r\n        className={cx(className, {\r\n          button: true,\r\n          button_loading: isLoading,\r\n        })}\r\n        type={isSubmit ? 'submit' : 'button'}\r\n        disabled={isDisabled}\r\n        onClick={this.onClick}\r\n      >\r\n        <span className={cx('button__content')}>{children}</span>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from 'react';\r\nimport Title from '../../components/Title';\r\nimport Button from '../../components/Button';\r\nimport {\r\n  AuthenticationManagerSingleton,\r\n  DriveProvidersEnum,\r\n} from '../../core/AuthenticationManager';\r\n\r\nconst cx = require('classnames/bind').bind(require('./style.scss'));\r\n\r\ninterface IProps {\r\n  changeAuth: (isAuth: boolean) => void;\r\n}\r\n\r\ninterface IState {\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n}\r\n\r\nclass UnauthorizedPage extends React.Component<IProps, IState> {\r\n  state = {\r\n    isLoading: false,\r\n    isError: false,\r\n  };\r\n\r\n  onClick = event => {\r\n    const authenticationManager = AuthenticationManagerSingleton.getInstance();\r\n    this.setState({ isLoading: true });\r\n    authenticationManager.login(DriveProvidersEnum.GoogleDrive).then(() => {\r\n      this.setState({ isLoading: false });\r\n      this.props.changeAuth(true);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={cx('unauthorized-page')}>\r\n        <Title>Вы не авторизованы</Title>\r\n        {this.state.isError ? (\r\n          <div>Ошибка</div>\r\n        ) : (\r\n          <Button onClick={this.onClick}>Авторизоваться в Google</Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnauthorizedPage;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport MainPage from '../../MainPage';\r\nimport DesktopPage from '../../DesktopPage';\r\nimport UnauthorizedPage from '../../pages/UnauthorizedPage';\r\nimport { AuthenticationManagerSingleton } from '../../core/AuthenticationManager';\r\nimport Loader from '../Loader';\r\nimport { IRootState } from '../../redux';\r\nimport { getApp } from '../../redux/modules/app/actions';\r\nimport { initDesktopsManagers } from '../../redux/modules/desktopManager/actions';\r\n\r\nconst cx = require('classnames/bind').bind(require('./style.scss'));\r\n\r\ninterface IStateToProps {\r\n  app: IRootState['app'];\r\n}\r\n\r\ninterface IDispatchToProps {\r\n  getApp: typeof getApp;\r\n  initDesktopsManagers: typeof initDesktopsManagers;\r\n}\r\n\r\ninterface IState {\r\n  isLoading: boolean;\r\n  isAuthorized: boolean;\r\n}\r\n\r\nclass App extends React.PureComponent<IStateToProps & IDispatchToProps, IState> {\r\n  state = {\r\n    isLoading: true,\r\n    isAuthorized: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const authenticationManager = AuthenticationManagerSingleton.getInstance();\r\n    authenticationManager\r\n      .restoreFromStore()\r\n      .then(isAuth => {\r\n        if (isAuth) {\r\n          return this.initAppData().then(() =>\r\n            this.setState({ isAuthorized: true, isLoading: false }),\r\n          );\r\n        } else {\r\n          this.setState({ isAuthorized: false, isLoading: false });\r\n        }\r\n      })\r\n      .catch(error => this.setState({ isAuthorized: false, isLoading: false }));\r\n\r\n    // TODO: Вынести в роутер\r\n  }\r\n\r\n  initAppData = () => {\r\n    return this.props.initDesktopsManagers().then(() => this.props.getApp());\r\n  };\r\n\r\n  changeAuth = (isAuth: boolean) => {\r\n    this.setState({ isLoading: true });\r\n    if (isAuth) {\r\n      return this.initAppData().then(() => this.setState({ isAuthorized: true, isLoading: false }));\r\n    } else {\r\n      this.setState({ isAuthorized: false, isLoading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.isLoading ? (\r\n      <Loader />\r\n    ) : this.state.isAuthorized ? (\r\n      <BrowserRouter>\r\n        <div className={cx('app')}>\r\n          <Route exact path=\"/\" component={MainPage} />\r\n          <Route path=\"/desktop\" component={DesktopPage} />\r\n        </div>\r\n      </BrowserRouter>\r\n    ) : (\r\n      <UnauthorizedPage changeAuth={this.changeAuth} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect<IStateToProps, IDispatchToProps>(\r\n  (state: IRootState) => ({\r\n    app: state.app,\r\n  }),\r\n  {\r\n    getApp,\r\n    initDesktopsManagers,\r\n  },\r\n)(App);\r\n","import { AppEntityResponse, IDesktopsManager } from '../../../../core/DesktopsManager';\r\nimport { IRootState } from '../../../index';\r\n\r\nexport const GET_APP_REQUEST = 'GET_APP_REQUEST';\r\nexport const GET_APP_SUCCESS = 'GET_APP_SUCCESS';\r\nexport const GET_APP_FAILURE = 'GET_APP_FAILURE';\r\n\r\n// TODO: AppEntity\r\nexport const getApp = (): any => {\r\n  return (dispatch, getState) => {\r\n    return dispatch({\r\n      promise: (): Promise<AppEntityResponse> => {\r\n        dispatch({ type: GET_APP_REQUEST });\r\n\r\n        const desktopsManager: IDesktopsManager = (getState() as IRootState).desktopsManager;\r\n\r\n        return desktopsManager.isInitialised().then(isInitialised => {\r\n          return isInitialised ? desktopsManager.fetchAppEntity() : desktopsManager.initialise();\r\n        });\r\n      },\r\n    })\r\n      .then((response: AppEntityResponse) => {\r\n        dispatch({ type: GET_APP_SUCCESS, payload: response });\r\n        return response;\r\n      })\r\n      .catch((errors: any) => {\r\n        dispatch({ type: GET_APP_FAILURE, payload: errors });\r\n        throw errors;\r\n      });\r\n  };\r\n};\r\n","import { DesktopsManager } from '../../../../core/DesktopsManager';\r\nimport { IDesktopManagerState } from '../types';\r\n\r\nexport const INIT_DESKTOPS_MANAGER_SUCCESS = 'INIT_DESKTOPS_MANAGER_SUCCESS';\r\n\r\nexport const initDesktopsManagers = (): any => {\r\n  return dispatch => {\r\n    return dispatch({\r\n      promise: (): Promise<IDesktopManagerState> => {\r\n        const desktopManager = new DesktopsManager();\r\n\r\n        dispatch({ type: INIT_DESKTOPS_MANAGER_SUCCESS, payload: desktopManager });\r\n        return new Promise<IDesktopManagerState>(resolve => resolve(desktopManager));\r\n      },\r\n    });\r\n  };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { DesktopsManagerReducer } from './modules/desktopManager/reducer';\r\nimport { AppReducer } from './modules/app/reducer';\r\n\r\nexport const RESET_STORE = 'RESET_STORE';\r\n\r\nexport const resetStore = { type: RESET_STORE };\r\n\r\nconst reducer = combineReducers({\r\n  desktopsManager: DesktopsManagerReducer(),\r\n  app: AppReducer(),\r\n});\r\n\r\nexport type IRootState = ReturnType<typeof reducer>;\r\n\r\nexport const rootReducer = (state: IRootState, action) => {\r\n  if (action.type === RESET_STORE) {\r\n    const initialState = reducer(undefined, action);\r\n\r\n    state = {\r\n      ...state,\r\n      desktopsManager: initialState.desktopsManager,\r\n      app: initialState.app,\r\n    };\r\n  }\r\n\r\n  return reducer(state, action);\r\n};\r\n","import { INIT_DESKTOPS_MANAGER_SUCCESS } from './actions';\r\nimport { IDesktopManagerState } from './types';\r\n\r\nexport const DesktopsManagerReducer = () => {\r\n  const INITIAL_STATE: IDesktopManagerState = null;\r\n\r\n  return (state = INITIAL_STATE, action): IDesktopManagerState => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n      case INIT_DESKTOPS_MANAGER_SUCCESS:\r\n        return payload;\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","import {\r\n  GET_APP_FAILURE,\r\n  GET_APP_REQUEST,\r\n  GET_APP_SUCCESS,\r\n  SAVE_APP_FAILURE,\r\n  SAVE_APP_REQUEST,\r\n  SAVE_APP_SUCCESS,\r\n} from './actions';\r\nimport { IAppState } from './types';\r\n\r\nexport const AppReducer = () => {\r\n  const INITIAL_STATE: IAppState = {\r\n    data: null,\r\n    isLoading: false,\r\n    isLoaded: false,\r\n  };\r\n\r\n  return (state = INITIAL_STATE, action): IAppState => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n      case GET_APP_REQUEST:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n\r\n      case GET_APP_SUCCESS:\r\n        return {\r\n          ...state,\r\n          data: payload,\r\n          isLoading: false,\r\n          isLoaded: true,\r\n        };\r\n\r\n      case GET_APP_FAILURE:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          isLoaded: false,\r\n        };\r\n\r\n      case SAVE_APP_REQUEST:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n\r\n      case SAVE_APP_SUCCESS:\r\n        return {\r\n          ...state,\r\n          data: { ...state.data, hash: payload },\r\n          isLoading: false,\r\n          isLoaded: true,\r\n        };\r\n\r\n      case SAVE_APP_FAILURE:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          isLoaded: false,\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","import { applyMiddleware, compose, createStore, Middleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nimport { IRootState, rootReducer } from './index';\r\nimport { isFunction } from 'util';\r\n\r\n// TODO: А оно нужно?\r\nconst INITIAL_STORE = {\r\n  desktopsManager: null,\r\n  app: {\r\n    data: null,\r\n    isLoading: false,\r\n    isLoaded: false,\r\n  },\r\n};\r\n\r\n// TODO\r\nconst isPromise = object => !!object.then;\r\n\r\nconst apiMiddleware: Middleware<{}, IRootState, any> = ({ dispatch, getState }) => {\r\n  return next => action => {\r\n    if (typeof action === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    // TODO\r\n    if (!isFunction(action.promise)) {\r\n      return next(action);\r\n    }\r\n\r\n    const actionPromise = action.promise();\r\n\r\n    if (!isPromise(actionPromise)) {\r\n      return next(action);\r\n    }\r\n\r\n    action.type && dispatch({ type: action.type, payload: action.payload });\r\n\r\n    return (\r\n      actionPromise\r\n        // TODO\r\n        .then((response: any) => {\r\n          return response;\r\n        })\r\n        // TODO\r\n        .catch((errors: any) => {\r\n          throw errors;\r\n        })\r\n    );\r\n  };\r\n};\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [apiMiddleware, thunk];\r\n\r\n  middlewares.push(createLogger({ collapsed: true }));\r\n\r\n  const composeEnhancers =\r\n    (typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    INITIAL_STORE,\r\n    composeEnhancers((applyMiddleware as any)(...middlewares)),\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './components/App';\r\nimport { AuthenticationManagerSingleton } from './core/AuthenticationManager';\r\nimport configureStore from './redux/configureStore';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = configureStore();\r\n\r\nAuthenticationManagerSingleton.createInstance();\r\n\r\nReactDOM.render(\r\n  <Provider store={store} key=\"provider\">\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import { DriveSession, DriveUserData, IAuthData, IDriveApi } from '../DriveProviders';\r\nimport { GoogleDriveSession } from '../DriveProviders/GoogleDriveApi/GoogleDriveSession';\r\nimport { NotAuthenticatedError } from './NotAuthenticatedError';\r\nimport { GoogleAuthData } from '../DriveProviders/GoogleDriveApi/GoogleAuthData';\r\n\r\nexport enum DriveProvidersEnum {\r\n  GoogleDrive = 'google-drive',\r\n}\r\n\r\ninterface StoredAuthData {\r\n  provider: DriveProvidersEnum;\r\n  data: IAuthData;\r\n}\r\n\r\nexport class AuthenticationManager {\r\n  private session: DriveSession | null = null;\r\n\r\n  get hasSession(): boolean {\r\n    return !!this.session;\r\n  }\r\n\r\n  restoreFromStore(): Promise<boolean> {\r\n    if (localStorage.getItem('sessionData') !== null) {\r\n      this.createDriveProviderSession(DriveProvidersEnum.GoogleDrive);\r\n      return this.session.init().then(() => this.session.checkSession());\r\n    } else {\r\n      return new Promise<boolean>(r => {\r\n        r(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @throws NotAuthenticatedError if is not authenticated.\r\n   */\r\n  getCurrentDriveProvider(): DriveProvidersEnum {\r\n    if (!this.hasSession) {\r\n      throw new NotAuthenticatedError();\r\n    }\r\n\r\n    return this.session.DRIVE_PROVIDER_NAME;\r\n  }\r\n\r\n  /**\r\n   * @throws If session exist\r\n   */\r\n  login(driveProvider: DriveProvidersEnum, loginData?: object): Promise<void> {\r\n    if (this.session) {\r\n      window.location.reload();\r\n    }\r\n\r\n    this.createDriveProviderSession(driveProvider);\r\n\r\n    return this.session\r\n      .init()\r\n      .then(() => this.session.login())\r\n      .then(data => this.saveAuthData(data))\r\n      .catch(e => {\r\n        this.session = null;\r\n        this.clearAuthData();\r\n        throw e;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @throws NotAuthenticatedError if is not authenticated.\r\n   */\r\n  logout(): Promise<void> {\r\n    if (!this.hasSession) {\r\n      throw new NotAuthenticatedError();\r\n    }\r\n\r\n    return this.session.logout().then(() => {\r\n      this.clearAuthData();\r\n      this.session = null;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @throws NotAuthenticatedError if is not authenticated.\r\n   */\r\n  getUserData(): DriveUserData {\r\n    if (!this.hasSession) {\r\n      throw new NotAuthenticatedError();\r\n    }\r\n\r\n    return this.session.getUserData();\r\n  }\r\n\r\n  /**\r\n   * @throws NotAuthenticatedError if is not authenticated.\r\n   */\r\n  getDriveApi(): IDriveApi {\r\n    if (!this.hasSession) {\r\n      throw new NotAuthenticatedError();\r\n    }\r\n\r\n    return this.session.getDriveApi();\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  private saveAuthData(data: IAuthData) {\r\n    const sessionData: StoredAuthData = {\r\n      provider: DriveProvidersEnum.GoogleDrive,\r\n      data,\r\n    };\r\n    localStorage.setItem('sessionData', JSON.stringify(sessionData));\r\n  }\r\n\r\n  private createDriveProviderSession(driveProvider: DriveProvidersEnum, authData?: IAuthData) {\r\n    switch (driveProvider) {\r\n      case DriveProvidersEnum.GoogleDrive:\r\n        this.session = new GoogleDriveSession(authData as GoogleAuthData);\r\n        break;\r\n      default:\r\n        throw new Error('Create session error');\r\n    }\r\n  }\r\n}\r\n","import { IDriveApi } from './IDriveApi';\r\nimport { DriveProvidersEnum } from '../AuthenticationManager';\r\n\r\n/**\r\n * @desc Temp model\r\n * TODO: Correct model for user data\r\n */\r\nexport interface DriveUserData {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\n\r\n// abstract\r\n// tslint:disable-next-line\r\nexport interface IAuthData {}\r\n\r\nexport abstract class DriveSession {\r\n  abstract DRIVE_PROVIDER_NAME: DriveProvidersEnum;\r\n\r\n  abstract login(): Promise<IAuthData>;\r\n\r\n  abstract getUserData(): DriveUserData;\r\n\r\n  abstract init(iAuthData?: IAuthData): Promise<void>;\r\n\r\n  abstract logout(): Promise<void>;\r\n\r\n  abstract getDriveApi(): IDriveApi;\r\n\r\n  abstract checkSession(): Promise<boolean>;\r\n}\r\n","import { IDriveApi, StorageUnitBody, StorageUnitId, StorageUnitMetadata } from '../IDriveApi';\r\n\r\nexport class GoogleDriveAPI implements IDriveApi {\r\n  constructor(private token: string) {}\r\n\r\n  insert(metadata: StorageUnitMetadata, body?: StorageUnitBody): Promise<StorageUnitId> {\r\n    return new Promise<StorageUnitId>(r => {\r\n      const accessToken = gapi.auth.getToken().access_token;\r\n\r\n      metadata.parents = undefined;\r\n\r\n      const form = new FormData();\r\n      form.append('metadata', new Blob([JSON.stringify(metadata)], { type: 'application/json' }));\r\n      form.append('file', body.body, 'filename.json');\r\n\r\n      fetch('https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id', {\r\n        method: 'POST',\r\n        headers: new Headers({\r\n          Authorization: 'Bearer ' + accessToken,\r\n        }),\r\n        body: form,\r\n      })\r\n        .then(res => {\r\n          return res.json();\r\n        })\r\n        .then(val => {\r\n          r(val.id);\r\n        });\r\n    });\r\n  }\r\n\r\n  isExistById(itemId: StorageUnitId): Promise<boolean> {\r\n    return new Promise<boolean>(r => {\r\n      window.gapi.client.drive.files\r\n        .get({\r\n          fileId: itemId,\r\n        })\r\n        .then(\r\n          () => {\r\n            r(true);\r\n          },\r\n          () => {\r\n            r(false);\r\n          },\r\n        );\r\n    });\r\n  }\r\n\r\n  getIdByFullName(name: string, parents: string[]): Promise<StorageUnitId | undefined> {\r\n    return new Promise<StorageUnitId | undefined>(r => {\r\n      window.gapi.client.drive.files\r\n        .list({\r\n          q: `name = '${name}'`,\r\n        })\r\n        .then(response => {\r\n          console.log('res', response);\r\n          const file = response.result.files[0];\r\n          r(file ? file.id : undefined);\r\n        });\r\n    });\r\n  }\r\n\r\n  load(itemId: StorageUnitId): Promise<string> {\r\n    return new Promise<string>(r => {\r\n      window.gapi.client.drive.files\r\n        .get({\r\n          // fileId: itemId\r\n          fileId: itemId,\r\n          alt: 'media',\r\n        })\r\n        .then(response => {\r\n          r(response.body);\r\n        });\r\n    });\r\n  }\r\n\r\n  remove(itemId: StorageUnitId): Promise<void> {\r\n    return new Promise<void>(r => {\r\n      window.gapi.client.drive.files\r\n        .delete({\r\n          fileId: itemId,\r\n        })\r\n        .then(() => r());\r\n    });\r\n  }\r\n}\r\n","import { DriveSession, DriveUserData, IAuthData } from '../DriveSession';\r\nimport { IDriveApi } from '../IDriveApi';\r\nimport { GoogleDriveAPI } from './GoogleDriveAPI';\r\nimport { DriveProvidersEnum } from '../../AuthenticationManager';\r\nimport { GoogleAuthData } from './GoogleAuthData';\r\n\r\nexport class GoogleDriveSession extends DriveSession {\r\n  DRIVE_PROVIDER_NAME = DriveProvidersEnum.GoogleDrive;\r\n\r\n  private driveApi: GoogleDriveAPI | null = null;\r\n  private token = 'some-token';\r\n  private name = localStorage.getItem('firstName');\r\n  private familyName = localStorage.getItem('familyName');\r\n\r\n  constructor(currentAuth?: GoogleAuthData) {\r\n    super();\r\n    if (currentAuth) {\r\n      this.token = currentAuth.token;\r\n    }\r\n  }\r\n\r\n  getUserData(): DriveUserData {\r\n    return {\r\n      firstName: this.name,\r\n      lastName: this.familyName,\r\n    };\r\n  }\r\n\r\n  init(): Promise<void> {\r\n    return this.initGAuth()\r\n      .then(() => this.checkSession())\r\n      .then((hasSession: boolean) => {\r\n        if (hasSession) {\r\n          this.driveApi = new GoogleDriveAPI(this.token);\r\n        }\r\n      });\r\n  }\r\n\r\n  initGAuth(): Promise<void> {\r\n    return new Promise(r => {\r\n      window.gapi.load('client:auth2', () => {\r\n        const promise = window.gapi.client.init({\r\n          apiKey: 'AIzaSyBR8vIMi58y3qKaN8aoDCU9ryWjoAmbhEI',\r\n          discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\r\n          clientId: '738301684291-htmav52vafqrhe72i2opi1rqu2vu89om.apps.googleusercontent.com',\r\n          scope:\r\n            'https://www.googleapis.com/auth/drive ' +\r\n            'https://www.googleapis.com/auth/drive.appdata ' +\r\n            'https://www.googleapis.com/auth/drive.file ' +\r\n            'https://www.googleapis.com/auth/drive.metadata ' +\r\n            'https://www.googleapis.com/auth/drive.metadata.readonly ' +\r\n            'https://www.googleapis.com/auth/drive.photos.readonly ' +\r\n            'https://www.googleapis.com/auth/drive.readonly',\r\n        });\r\n        r(promise);\r\n      });\r\n    });\r\n  }\r\n\r\n  login(): Promise<IAuthData> {\r\n    return this.googleAuth().then(token => {\r\n      this.token = token;\r\n      this.driveApi = new GoogleDriveAPI(this.token);\r\n      return { token: this.token };\r\n    });\r\n  }\r\n\r\n  logout(): Promise<void> {\r\n    return this.googleLogout().then(() => {\r\n      this.token = null;\r\n      this.driveApi = null;\r\n    });\r\n  }\r\n\r\n  getDriveApi(): IDriveApi {\r\n    return this.driveApi;\r\n  }\r\n\r\n  checkSession(): Promise<boolean> {\r\n    return this.isSession().then(isSignedIn => {\r\n      return isSignedIn;\r\n    });\r\n  }\r\n\r\n  private googleAuth() {\r\n    return window.gapi.auth2\r\n      .getAuthInstance()\r\n      .signIn()\r\n      .then(googleUser => {\r\n        this.name = googleUser.getBasicProfile().getGivenName();\r\n        this.familyName = googleUser.getBasicProfile().getFamilyName();\r\n        localStorage.setItem('firstName', this.name);\r\n        localStorage.setItem('familyName', this.familyName);\r\n        return googleUser.getAuthResponse().id_token;\r\n      });\r\n  }\r\n\r\n  private googleLogout() {\r\n    return window.gapi.auth2.getAuthInstance().signOut();\r\n  }\r\n\r\n  private isSession() {\r\n    return new Promise<boolean>(r => {\r\n      window.gapi.auth2.getAuthInstance().then(googleUser => {\r\n        r(googleUser.currentUser.get().isSignedIn());\r\n      });\r\n    });\r\n  }\r\n}\r\n","export const NOT_AUTHENTICATED_ERROR_MESSAGE = 'Is not authenticated';\r\n\r\nexport class NotAuthenticatedError extends Error {\r\n  constructor() {\r\n    super(NOT_AUTHENTICATED_ERROR_MESSAGE);\r\n  }\r\n}\r\n","import { AuthenticationManager } from './AuthenticationManager';\r\n\r\n/**\r\n * @note Bad practice...\r\n */\r\nexport class AuthenticationManagerSingleton {\r\n  private static instance: AuthenticationManager | null;\r\n\r\n  static getInstance() {\r\n    if (!this.instance) {\r\n      throw new Error('No instance');\r\n    }\r\n\r\n    return this.instance;\r\n  }\r\n\r\n  static createInstance() {\r\n    this.instance = new AuthenticationManager();\r\n\r\n    return this.instance;\r\n  }\r\n\r\n  static isInstanceExist() {\r\n    return !!this.instance;\r\n  }\r\n}\r\n","export * from './AuthenticationManager';\r\nexport * from './AuthenticationManagerSingleton';\r\nexport * from './NotAuthenticatedError';\r\n","import { IDesktopsManager } from '../IDesktopsManager';\r\nimport { StorageUnitBody, StorageUnitId, StorageUnitMetadata } from '../../DriveProviders';\r\nimport { AppEntityResponse } from '../AppEntityResponse';\r\nimport { AppEntity, DesktopEntity } from '../../../entities';\r\nimport { AuthenticationManagerSingleton } from '../../AuthenticationManager';\r\nimport { hashStringV1 } from '../helpers';\r\n\r\nexport class DesktopsManager implements IDesktopsManager {\r\n  private readonly ROOT_DIR = 'tmpFolder';\r\n  // private readonly ROOT_DIR = 'appDataFolder';\r\n  private readonly FOLDER_MIME_TYPE = 'application/vnd.google-apps.folder';\r\n  private readonly METADATA_FILENAME = 'metadata.json';\r\n\r\n  private authenticatedManager = AuthenticationManagerSingleton.getInstance();\r\n  private driveApi = this.authenticatedManager.getDriveApi();\r\n  private metadataFileId: StorageUnitId | undefined;\r\n\r\n  uploadFile(\r\n    desktopId: number,\r\n    name: string,\r\n    mimeType: string,\r\n    content: Blob,\r\n  ): Promise<StorageUnitId> {\r\n    const metadata: StorageUnitMetadata = {\r\n      name,\r\n      parents: [this.ROOT_DIR, desktopId.toString()],\r\n    };\r\n\r\n    return this.insertToDrive(mimeType, content, metadata);\r\n  }\r\n\r\n  fetchAppEntity(): Promise<AppEntityResponse> {\r\n    if (!this.metadataFileId) {\r\n      throw new Error('Undefined metadataFileId');\r\n    }\r\n\r\n    return this.driveApi.load(this.metadataFileId).then((resp: string) => {\r\n      return {\r\n        hash: hashStringV1(resp).toString(),\r\n        appEntity: JSON.parse(resp),\r\n      };\r\n    });\r\n  }\r\n\r\n  initialise(): Promise<AppEntityResponse> {\r\n    return this.uploadState({ desktopList: [] }).then(() => this.fetchAppEntity());\r\n  }\r\n\r\n  saveAppEntity(state: AppEntity, oldHash: string): Promise<string> {\r\n    // todo: compare hashes here\r\n    return this.driveApi.remove(this.metadataFileId).then(() => this.uploadState(state));\r\n  }\r\n\r\n  isInitialised(): Promise<boolean> {\r\n    return this.driveApi\r\n      .getIdByFullName(this.METADATA_FILENAME, [this.ROOT_DIR])\r\n      .then((id: StorageUnitId | undefined) => {\r\n        if (id) {\r\n          this.metadataFileId = id;\r\n        }\r\n\r\n        return !!id;\r\n      });\r\n  }\r\n\r\n  downloadFile(id: StorageUnitId): Promise<string> {\r\n    return this.driveApi.load(id);\r\n  }\r\n\r\n  createDesktopSpace(desktopId: number): Promise<string> {\r\n    return this.driveApi.insert({\r\n      name: desktopId.toString(),\r\n      parents: [this.ROOT_DIR],\r\n      mimeType: this.FOLDER_MIME_TYPE,\r\n    });\r\n  }\r\n\r\n  removeDesktopSpace(externalDesktopId: StorageUnitId): Promise<void> {\r\n    return this.removeFile(externalDesktopId);\r\n  }\r\n\r\n  removeFile(id: StorageUnitId): Promise<void> {\r\n    return this.driveApi.remove(id);\r\n  }\r\n\r\n  saveDesktop(desktop: DesktopEntity): Promise<string> {\r\n    return this.fetchAppEntity()\r\n      .then(({ appEntity }: AppEntityResponse) => appEntity)\r\n      .then((appEntity: AppEntity) => {\r\n        appEntity.desktopList = appEntity.desktopList\r\n          .filter((d) => d.id !== desktop.id)\r\n          .concat(desktop);\r\n        return appEntity;\r\n      })\r\n      .then((appEntity: AppEntity) => this.saveAppEntity(appEntity, 'hash'));\r\n  }\r\n\r\n  getDesktop(desktopId: number): Promise<DesktopEntity> {\r\n    return this.fetchAppEntity()\r\n      .then(({ appEntity }: AppEntityResponse) => appEntity)\r\n      .then((appEntity: AppEntity) => appEntity.desktopList\r\n          .find((d) => d.id === desktopId));\r\n  }\r\n\r\n  private uploadState(state: AppEntity) {\r\n    const metadata: StorageUnitMetadata = {\r\n      name: this.METADATA_FILENAME,\r\n      parents: [this.ROOT_DIR],\r\n    };\r\n\r\n    return this.insertToDrive(\r\n      'application/json',\r\n      new Blob([JSON.stringify(state)], { type: 'application/json' }),\r\n      metadata,\r\n    ).then(id => {\r\n      this.metadataFileId = id;\r\n      return id;\r\n    });\r\n  }\r\n\r\n  private insertToDrive(mimeType: string, content: Blob, metadata: StorageUnitMetadata) {\r\n    const body: StorageUnitBody = {\r\n      mimeType,\r\n      body: content,\r\n    };\r\n\r\n    return this.driveApi.insert(metadata, body);\r\n  }\r\n}\r\n"],"sourceRoot":""}